{"version":3,"sources":["serviceWorker.ts","store/models/constants.ts","store/models/aboutTypes.ts","environment.ts","firebase/config.ts","store/actions/aboutAction.ts","features/LoadingElement/LoadingElement.tsx","store/models/imagesTypes.ts","store/actions/imagesAction.ts","app/Home/hooks/About/about.tsx","store/models/bannerTypes.ts","store/actions/bannerAction.ts","app/Home/hooks/Banner/banner.tsx","store/models/companiesTypes.ts","store/actions/companiesAction.ts","app/Home/hooks/Companies/companies.tsx","features/Form/Field/index.tsx","features/Form/Input/index.tsx","features/Form/Checkbox/index.tsx","app/Admin/components/SelectImages/selectImages.tsx","features/Form/ImageField/imageField.tsx","features/Form/Field/model.ts","features/FabButton/fabButton.tsx","features/Form/List/list.tsx","features/Form/RichText/richText.tsx","features/Form/Fields/fields.tsx","store/reducers/aboutReducer.ts","store/reducers/authReducer.ts","store/reducers/bannerReducer.ts","store/reducers/companiesReducer.ts","store/reducers/imagesReducer.ts","store/models/locationTypes.ts","store/reducers/locationReducer.ts","store/models/servicesTypes.ts","store/reducers/servicesReducer.ts","store/index.ts","features/Form/index.tsx","app/Home/hooks/Contact/contact.tsx","store/actions/locationAction.ts","app/Home/hooks/Location/location.tsx","app/Home/hooks/Services/Service/service.tsx","app/Home/hooks/Services/services.tsx","app/Home/home.tsx","store/actions/servicesAction.ts","app/Services/Service/index.tsx","app/Services/index.tsx","features/Burger/index.tsx","assets/images/logo.png","assets/images/logo-pixelized.png","features/Header/index.tsx","features/Footer/index.tsx","store/actions/authAction.ts","app/Login/index.tsx","app/constants/routes.ts","app/Admin/pages/About/about.tsx","app/Admin/pages/Banner/banner.tsx","app/Admin/pages/Companies/companies.tsx","app/Admin/pages/Contact/contact.tsx","app/Admin/pages/Home/home.tsx","app/Admin/pages/Location/location.tsx","app/Admin/pages/Media/media.tsx","app/Admin/pages/Services/components/Service/service.tsx","app/Admin/pages/Services/services.tsx","assets/images/logo_single.png","app/Admin/components/Header/header.tsx","features/Animation/animation.tsx","features/PopUpMessage/popUpMessage.tsx","app/Admin/admin.tsx","app/App/hooks/auth/PrivateRoute.tsx","app/App/hooks/auth/PublicRoute.tsx","app/App/app.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","SET_USER","SIGN_OUT","SET_LOADING","SET_ERROR","SET_SUCCESS","SET_ABOUT","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","setLoading","value","dispatch","type","CONSTANTS","payload","getAbout","isCalled","a","database","ref","on","data","val","error","setError","message","err","console","log","msg","LoadingElement","className","this","props","rounded","style","width","height","React","Component","SET_IMAGES","getImages","onError","arrayImages","Object","keys","map","key","full","pixelized","onCompressFile","file","maxSizeMB","quality","onProgressFunc","maxWidth","imageCompression","useWebWorker","maxWidthOrHeight","undefined","initialQuality","onProgress","p","uploadFile","Promise","resolve","reject","storage","child","Date","now","put","TaskEvent","STATE_CHANGED","snapshot","getDownloadURL","then","addNewImage","generatedKey","compressedFiles","size","name","all","pathsFiles","push","getImageFromKey","images","filter","image","About","useDispatch","about","useSelector","state","useEffect","renderImages","background","profil","alt","placeholderSrc","src","effect","id","title","subTitle","dangerouslySetInnerHTML","__html","text","SET_BANNER","getBanner","Banner","banner","container","containerImage","renderImage","isBanner","bannerImage","subSubTitle","SET_COMPANIES","getCompanies","Companies","companies","company","renderCompanies","items","index","href","link","target","rel","toReturn","Array","Field","handleFocus","e","preventDefault","setState","isFocus","handleBlur","onBlur","field","handleChanged","fieldChanged","openImage","required","label","fieldStyle","htmlFor","keyId","toString","renderRequired","renderFieldType","renderError","Input","placeholder","onChange","onFocus","Checkbox","margin","htmlText","SelectImages","useState","keySelected","setKeySelected","onDelete","refFromURL","delete","remove","deleteImageFromKey","onPage","multiple","event","files","i","length","onClick","changeSelectedKey","reverse","onClose","onValid","ImageField","onImagesChanged","indexGroup","marginTop","styleModifyText","INPUT","CHECKBOX","IMAGE","FabButton","List","handleAddFields","model","listValues","list","slice","n_value","item","renderValues","handleChange","parentID","fieldID","values","m_field","obj","handleDelete","splice","renderTableHead","toRender","renderType","parentKey","fieldProps","indexValue","itemsRender","indexItem","displayedValue","RichText","toolbarConfig","display","INLINE_STYLE_BUTTONS","BLOCK_ALIGNMENT_BUTTONS","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","editorValue","RichTextEditor","createValueFromString","Fields","onDetectChanges","fields","p_fields","p_field","keyID","hasOwnProperty","addErrorMessage","renderFields","intialState","loading","aboutReducer","action","initialState","user","authenticated","needVerification","success","authReducer","bannerReducer","companiesReducer","imagesReducer","SET_LOCATION","SET_SIZE","locationReducer","SET_SERVICES","SET_DISPLAY","SET_CURRENT_INDEX","SET_MOBILE","SET_TICKING","services","currentIndex","mobile","ticking","servicesReducer","rootReducer","combineReducers","auth","store","createStore","composeWithDevTools","applyMiddleware","thunk","Form","condition","regMailValue","RegExp","test","regPhoneValue","handleOnChange","form","document","getElementById","formId","isValid","checkValidity","handleSubmit","isError","getSubmitForm","changeImagesOnGroup","handleImagesChanged","handleOnDelete","generateFormId","updateFromStore","subscribe","getState","Math","random","substring","renderButton","button","disabled","buttonForm","aria-hidden","renderFieldsData","onSubmit","renderButtons","Contact","handleSizes","innerWidth","addEventListener","removeEventListener","getLocation","setSize","Location","innerHeight","offsetHeight","googleMapsApiKey","mapContainerStyle","center","lat","lng","zoom","Service","serviceImage","service","to","backgroundImage","desc","Services","servicesMap","Home","includes","scrollIntoView","scrollTo","getServices","setDisplay","displays","setCurrentIndex","setMobile","setTicking","isDown","isUp","align","content","tickingTimeout","indexToLocate","parseInt","hash","replace","servicesDisplay","d","clearInterval","slideDurationTimeout","t","setTimeout","moveToLocation","onWheel","deltaY","renderServices","handleClickDot","renderDots","Burger","open","setOpen","Header","handleSetOpenMobile","isOverLimit","limit","fixed","onscroll","pageYOffset","param","onClickLink","logoPixelized","logo","isFixed","renderHamburgerButton","renderMobileIcon","Footer","setUser","email","Login","password","signInWithEmailAndPassword","LOGIN","ADMIN","ADMIN_MEDIA","ADMIN_BANNER","ADMIN_SERVICES","ADMIN_ABOUT","ADMIN_COMPANIES","ADMIN_LOCATION","ADMIN_CONTACT","AboutAdmin","aboutForm","handleIsSuccess","isSuccess","onPopUp","callback","set","setAbout","BannerAdmin","bannerForm","setBanner","CompaniesAdmin","companiesForm","setCompanies","ContactAdmin","HomeAdmin","LocationAdmin","locationForm","setLocation","MediaAdmin","ServiceAdmin","formService","isShow","onSubmitForm","ServicesAdmin","servicesState","setServicesState","indexToShow","setIndexToShow","JSON","parse","stringify","servicesInformationsForm","renderForms","s","handleSubmitForm","handleChangeView","m_services","isNew","setSingleService","deleteService","n_services","setServicesInformations","HeaderAdmin","isClose","logoSingle","ROUTES","signOut","SLIDE","Animation","childRef","useRef","children","visible","current","timer","duration","clearTimeout","body","PopUpMessage","endAnimation","popupDataInitializer","Admin","setIsClose","popupVisible","setPopupVisible","popupDatas","setPopupDatas","handlePopUp","exact","path","component","render","PrivateRoute","rest","unsubscribe","onAuthStateChanged","PublicRoute","App","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.29065fcc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const SET_USER = 'SET_USER';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const NEED_VERIFICATION = 'NEED_VERIFICATION';\r\nexport const SET_SUCCESS = 'SET_SUCCESS';\r\nexport const SET_AUTHENTICATION = 'SET_AUTHENTICATION';","import * as CONSTANTS from './constants';\r\nexport const SET_ABOUT = 'SET_ABOUT';\r\n\r\nexport interface About {\r\n    title: string;\r\n    subTitle: string;\r\n    text: string;\r\n    profil: string;\r\n    background: string;\r\n}\r\n\r\nexport interface AboutState {\r\n    about: About | null;\r\n    loading: boolean;\r\n    error: string;\r\n}\r\n\r\ninterface SetAboutAction {\r\n    type: typeof SET_ABOUT;\r\n    payload: About;\r\n}\r\n\r\ninterface SetLoadingAction {\r\n  type: typeof CONSTANTS.SET_LOADING;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetErrorAction {\r\n  type: typeof CONSTANTS.SET_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type AboutAction = SetAboutAction | SetLoadingAction | SetErrorAction;","const firebaseConfig = {\r\n    apiKey: \"AIzaSyCOlCWglACdL8xVijkKzuO5JFlPbpd7Wpw\",\r\n    authDomain: \"amandinepapon-preprod.firebaseapp.com\",\r\n    databaseURL: \"https://amandinepapon-preprod.firebaseio.com\",\r\n    projectId: \"amandinepapon-preprod\",\r\n    storageBucket: \"amandinepapon-preprod.appspot.com\",\r\n    messagingSenderId: \"676856395976\",\r\n    appId: \"1:676856395976:web:ef4f3fd4151b2344800dfd\",\r\n    measurementId: \"G-J0R7Q4R1QS\"\r\n};\r\n\r\nexport default firebaseConfig;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\n\r\nimport firebaseConfig from '../environment';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import { ThunkAction } from 'redux-thunk';\r\n\r\nimport * as CONSTANTS from '../models/constants';\r\nimport { About, AboutAction, SET_ABOUT } from '../models/aboutTypes';\r\n\r\nimport { RootState } from '..';\r\nimport firebase from '../../firebase/config';\r\n\r\nexport const setLoading = (value: boolean): ThunkAction<void, RootState, null, AboutAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_LOADING,\r\n            payload: value\r\n        });\r\n    }\r\n}\r\n\r\nexport const getAbout = (isCalled?: boolean): ThunkAction<void, RootState, null, AboutAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            firebase.database().ref('about/').on('value', (data: firebase.database.DataSnapshot) => {\r\n                if (data.val()) {\r\n                    dispatch({\r\n                        type: SET_ABOUT,\r\n                        payload: data.val()\r\n                    });\r\n                    dispatch(setLoading(false));\r\n                }\r\n            }, error => {\r\n                dispatch(setError(error.message));\r\n                dispatch(setLoading(false));\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n            dispatch(setError(err));\r\n            dispatch(setLoading(false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAbout = (about: About, callback: (isSuccess: boolean) => void): ThunkAction<void, RootState, null, AboutAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            await firebase.database().ref('about/').set(about);\r\n            dispatch(getAbout());\r\n            callback(true);\r\n            dispatch(setLoading(false));\r\n        } catch (err) {\r\n            console.log(err);\r\n            callback(false);\r\n            dispatch(setLoading(false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const setError = (msg: string): ThunkAction<void, RootState, null, AboutAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_ERROR,\r\n            payload: msg\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport './style.scss';\r\n\r\nclass LoadingElement extends React.Component<{width: string, height: string, rounded: boolean}, {}>  {\r\n    render() {\r\n        return (\r\n            <div\r\n                className={`loading-element${this.props.rounded ? ' rounded': ''}`}\r\n                style={{width: this.props.width, height: this.props.height}}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoadingElement;","import * as CONSTANTS from './constants';\r\nexport const SET_IMAGES = 'SET_IMAGES';\r\n\r\nexport interface Image {\r\n    full: string;\r\n    pixelized: string;\r\n    key: string;\r\n}\r\n\r\nexport interface ImagesState {\r\n    images: Array<Image> | null;\r\n    error: string;\r\n    loading: boolean;\r\n}\r\n\r\ninterface SetImagesAction {\r\n    type: typeof SET_IMAGES;\r\n    payload: Array<Image>;\r\n}\r\n\r\ninterface SetLoadingAction {\r\n  type: typeof CONSTANTS.SET_LOADING;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetErrorAction {\r\n  type: typeof CONSTANTS.SET_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type ImagesAction = SetImagesAction | SetLoadingAction | SetErrorAction;","import { ThunkAction } from 'redux-thunk';\r\n\r\nimport imageCompression from 'browser-image-compression';\r\n\r\nimport * as CONSTANTS from '../models/constants';\r\nimport { ImagesAction, SET_IMAGES, Image } from '../models/imagesTypes';\r\n\r\nimport { RootState } from '..';\r\nimport firebase from '../../firebase/config';\r\n\r\nexport const setLoading = (value: boolean): ThunkAction<void, RootState, null, ImagesAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_LOADING,\r\n            payload: value\r\n        });\r\n    }\r\n}\r\n\r\nexport const getImages = (onError: () => void): ThunkAction<void, RootState, null, ImagesAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            firebase.database().ref('images/').on('value', (data: firebase.database.DataSnapshot) => {\r\n                if (data.val()) {\r\n                    const arrayImages = Object.keys(data.val()).map((key: string) => {\r\n                        return {\r\n                            full: data.val()[key].full,\r\n                            pixelized: data.val()[key].pixelized,\r\n                            key: key,\r\n                        };\r\n                    });\r\n                    dispatch({\r\n                        type: SET_IMAGES,\r\n                        payload: arrayImages\r\n                    });\r\n                    dispatch(setLoading(false));\r\n                }\r\n            }, error => {\r\n                dispatch(setError(error.message));\r\n                dispatch(setLoading(false));\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n            onError();\r\n            dispatch(setError(err.message));\r\n        }\r\n    }\r\n}\r\n\r\nconst onCompressFile = async (file: File, maxSizeMB: number, quality: number, onProgressFunc: (p: number) => void, maxWidth?: number) => {\r\n    return await imageCompression(file, {\r\n        maxSizeMB: maxSizeMB,\r\n        useWebWorker: true,\r\n        maxWidthOrHeight: maxWidth ? maxWidth : undefined,\r\n        initialQuality: quality,\r\n        onProgress: (p: number) => onProgressFunc(p)\r\n    });\r\n}\r\n\r\nconst uploadFile = (file: File, type: string): Promise<string> => {\r\n    return new Promise(\r\n        (resolve, reject) => {\r\n            const uploadFile = firebase.storage().ref().child(`images/${type}-${Date.now()}`).put(file);\r\n            uploadFile.on(firebase.storage.TaskEvent.STATE_CHANGED,\r\n                () => {},\r\n                (error) => reject(error),\r\n                () => {\r\n                    uploadFile.snapshot.ref.getDownloadURL().then(\r\n                        (value: string) => resolve(value),\r\n                        (error) => reject(error)\r\n                    );\r\n                }\r\n            );\r\n        }\r\n    )\r\n}\r\n\r\nexport const addNewImage = (file: File, onError: () => void, generatedKey?: (key: string | null) => void): ThunkAction<void, RootState, null, ImagesAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            const compressedFiles = { full: null as unknown as File, pixelized: null as unknown as File };\r\n            if (file.size >= 1) {\r\n                compressedFiles.full = await onCompressFile(file, 0.1, 1, (p: number) => console.log(file.name, p, 'full'));\r\n            } else {\r\n                compressedFiles.full = file;\r\n            }\r\n            compressedFiles.pixelized = await onCompressFile(file, 0.0004, .1, (p: number) => console.log(file.name, p, 'pixelized'), 50);\r\n            const [full, pixelized] = await Promise.all([uploadFile(compressedFiles.full, 'full'), uploadFile(compressedFiles.pixelized, 'pixelized')]);\r\n            const pathsFiles = {full: full, pixelized: pixelized};\r\n            const data = await firebase.database().ref('images/').push(pathsFiles);\r\n            dispatch(getImages(() => console.error('error on get images')));\r\n            if (generatedKey) generatedKey(data.key);\r\n            dispatch(setLoading(false));\r\n        } catch (err) {\r\n            console.log(err);\r\n            onError();\r\n            dispatch(setError(err.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteImageFromKey = (image: Image): ThunkAction<void, RootState, null, ImagesAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            await firebase.storage().refFromURL(image.pixelized).delete();\r\n            await firebase.storage().refFromURL(image.full).delete();\r\n            await firebase.database().ref('images/').child(image.key).remove();\r\n            dispatch(getImages(() => console.error('error on get images')));\r\n            dispatch(setLoading(false));\r\n        } catch (err) {\r\n            console.log(err);\r\n            dispatch(setError(err.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const getImageFromKey = (key: string, images: Array<Image>) => {\r\n    return images.filter((image: Image) => image.key === key)[0];\r\n}\r\n\r\n// export const signin = (data: SignInData, onError: () => void): ThunkAction<void, RootState, null, AuthAction> => {\r\n//     return async dispatch => {\r\n//         try {\r\n//             dispatch(setLoading(true));\r\n//             const login = await firebase.auth().signInWithEmailAndPassword(data.email, data.password);\r\n//             if (login.user) {\r\n//                 dispatch({\r\n//                     type: CONSTANTS.SET_USER,\r\n//                     payload: { email: data.email }\r\n//                 });\r\n//                 dispatch(setLoading(false));\r\n//             }\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//             onError();\r\n//             dispatch(setError(err.message));\r\n//         }\r\n//     }\r\n// }\r\n\r\n// export const logout = (): ThunkAction<void, RootState, null, AuthAction> => {\r\n//     return async dispatch => {\r\n//         try {\r\n//             dispatch(setLoading(true));\r\n//             await firebase.auth().signOut();\r\n//             dispatch({\r\n//                 type: CONSTANTS.SIGN_OUT\r\n//             });\r\n//             dispatch(setLoading(false));\r\n//         } catch (err) {\r\n//             console.log(err);\r\n//             dispatch(setLoading(false));\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport const setError = (msg: string): ThunkAction<void, RootState, null, ImagesAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_ERROR,\r\n            payload: msg\r\n        });\r\n    }\r\n}\r\n\r\n// export const setSuccess = (msg: string): ThunkAction<void, RootState, null, AuthAction> => {\r\n//     return dispatch => {\r\n//       dispatch({\r\n//         type: CONSTANTS.SET_SUCCESS,\r\n//         payload: msg\r\n//       });\r\n//     }\r\n// }","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './style.scss';\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nimport { getAbout } from '../../../../store/actions/aboutAction';\r\nimport { RootState } from '../../../../store';\r\n\r\nimport LoadingElement from '../../../../features/LoadingElement/LoadingElement';\r\nimport { getImageFromKey } from '../../../../store/actions/imagesAction';\r\n\r\nconst About: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { about } = useSelector((state: RootState) => state.about);\r\n    const { images } = useSelector((state: RootState) => state.images);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAbout());\r\n    }, [dispatch]);\r\n\r\n    const renderImages = () => {\r\n        const background = images ? getImageFromKey(about?.background as string, images) : null;\r\n        const profil = images ? getImageFromKey(about?.profil as string, images): null;\r\n\r\n        if (background && profil) {\r\n            return (\r\n                <div className=\"about-images\">\r\n                    <LazyLoadImage\r\n                        alt='Amandine Papon - background'\r\n                        placeholderSrc={background.pixelized}\r\n                        src={background.full}\r\n                        effect='blur'\r\n                        className='description-photo'\r\n                    />\r\n                    <LazyLoadImage\r\n                        alt='Amandine Papon - about'\r\n                        placeholderSrc={profil.pixelized}\r\n                        src={profil.full}\r\n                        effect='blur'\r\n                        className='description-photo-profil'\r\n                    />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"description-photo\">\r\n                    <LoadingElement width='100%' height='100%' rounded={false} />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (about) {\r\n        return (\r\n            <section className='about' id='about'>\r\n                <div className=\"about-container\">\r\n                    <h2 className=\"title\">{about.title}</h2>\r\n                    <h3 className=\"sub-title\">{about.subTitle}</h3>\r\n                    <div className=\"description\">\r\n                        <div className=\"text\" dangerouslySetInnerHTML={{__html: about.text}} />\r\n                    </div>\r\n                    {renderImages()}\r\n                </div>\r\n            </section>\r\n        );\r\n    } else {\r\n        return (\r\n            <section className='about' id='about'>\r\n                <div className=\"about-container\">\r\n                    <h2 className=\"title\"><LoadingElement width='350px' height='49px' rounded={true} /></h2>\r\n                    <h3 className=\"sub-title\"><LoadingElement width='250px' height='39px' rounded={true} /></h3>\r\n                    <div className=\"description\">\r\n                        <div className=\"text\">\r\n                            <LoadingElement width='100%' height='28px' rounded={true} />\r\n                            <LoadingElement width='100%' height='28px' rounded={true} />\r\n                            <LoadingElement width='100%' height='28px' rounded={true} />\r\n                            <LoadingElement width='100%' height='28px' rounded={true} />\r\n                            <LoadingElement width='60%' height='28px' rounded={true} />\r\n                        </div>\r\n                    </div>\r\n                    {renderImages()}\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import * as CONSTANTS from './constants';\r\nexport const SET_BANNER = 'SET_BANNER';\r\n\r\nexport interface Banner {\r\n    title: string;\r\n    subTitle: string;\r\n    subSubTitle: string;\r\n    image: string;\r\n}\r\n\r\nexport interface BannerState {\r\n    banner: Banner | null;\r\n    error: string;\r\n    loading: boolean;\r\n}\r\n\r\ninterface SetBannerAction {\r\n    type: typeof SET_BANNER;\r\n    payload: Banner;\r\n}\r\n\r\ninterface SetLoadingAction {\r\n  type: typeof CONSTANTS.SET_LOADING;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetErrorAction {\r\n  type: typeof CONSTANTS.SET_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type BannerAction = SetBannerAction | SetLoadingAction | SetErrorAction;","import { ThunkAction } from 'redux-thunk';\r\n\r\nimport * as CONSTANTS from '../models/constants';\r\nimport { BannerAction, SET_BANNER, Banner } from '../models/bannerTypes';\r\n\r\nimport { RootState } from '..';\r\nimport firebase from '../../firebase/config';\r\n\r\nexport const setLoading = (value: boolean): ThunkAction<void, RootState, null, BannerAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_LOADING,\r\n            payload: value\r\n        });\r\n    }\r\n}\r\n\r\nexport const getBanner = (onError: () => void): ThunkAction<void, RootState, null, BannerAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            firebase.database().ref('banner/').on('value', (data: firebase.database.DataSnapshot) => {\r\n                if (data.val()) {\r\n                    dispatch({\r\n                        type: SET_BANNER,\r\n                        payload: data.val()\r\n                    });\r\n                    dispatch(setLoading(false));\r\n                }\r\n            }, error => {\r\n                dispatch(setError(error.message));\r\n                dispatch(setLoading(false));\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n            onError();\r\n            dispatch(setError(err.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const setBanner = (banner: Banner, callback: (isSuccess: boolean) => void): ThunkAction<void, RootState, null, BannerAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            await firebase.database().ref('banner/').set(banner);\r\n            dispatch(getBanner(() => {}));\r\n            callback(true);\r\n            dispatch(setLoading(false));\r\n        } catch (err) {\r\n            console.log(err);\r\n            callback(false);\r\n            dispatch(setLoading(false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const setError = (msg: string): ThunkAction<void, RootState, null, BannerAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_ERROR,\r\n            payload: msg\r\n        });\r\n    }\r\n}","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './style.scss';\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nimport { getBanner } from '../../../../store/actions/bannerAction';\r\nimport { getImageFromKey } from '../../../../store/actions/imagesAction';\r\nimport { RootState } from '../../../../store';\r\n\r\nimport LoadingElement from '../../../../features/LoadingElement/LoadingElement';\r\n\r\nconst Banner: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { banner } = useSelector((state: RootState) => state.banner);\r\n    const { images } = useSelector((state: RootState) => state.images);\r\n    let container = null;\r\n    let containerImage = null;\r\n\r\n    useEffect(() => {\r\n        dispatch(getBanner(() => {console.log('error')}));\r\n    }, [dispatch]);\r\n\r\n    const renderImage = (isBanner: boolean) => {\r\n        if (images && isBanner) {\r\n            const bannerImage = getImageFromKey(banner?.image as string, images);\r\n            return (\r\n                <LazyLoadImage\r\n                    alt='Amandine Papon - banner'\r\n                    placeholderSrc={bannerImage.pixelized}\r\n                    src={bannerImage.full}\r\n                    effect='blur'\r\n                    className='banner-photo'\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"banner-photo\">\r\n                    <LoadingElement width='100vw' height='100vh' rounded={false} />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    if (banner) {\r\n        containerImage = renderImage(true);\r\n        container = (\r\n            <div className=\"container-title\">\r\n                <h1 className=\"title\">{banner.title}</h1>\r\n                <h2 className=\"sub-title\">{banner.subTitle}</h2>\r\n                <h3 className=\"sub-title\">{banner.subSubTitle}</h3>\r\n            </div>\r\n        );\r\n    } else {\r\n        containerImage = renderImage(false);\r\n        container = (\r\n            <div className=\"container-title\">\r\n                <h1 className=\"title\"><LoadingElement width='350px' height='49px' rounded={true} /></h1>\r\n                <h2 className=\"sub-title\"><LoadingElement width='450px' height='39px' rounded={true} /></h2>\r\n                <h3 className=\"sub-title\"><LoadingElement width='400px' height='39px' rounded={true} /></h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <section className='banner'>\r\n            <div className=\"container-image\">\r\n                {containerImage}\r\n            </div>\r\n            {container}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Banner;","import * as CONSTANTS from './constants';\r\nexport const SET_COMPANIES = 'SET_COMPANIES';\r\n\r\nexport interface Company {\r\n    image: string;\r\n    link: string;\r\n    name: string;\r\n}\r\n\r\nexport interface Companies {\r\n    title: string;\r\n    items: Array<Company> | null;\r\n}\r\n\r\nexport interface CompaniesState {\r\n    companies: Companies | null;\r\n    error: string;\r\n    loading: boolean;\r\n}\r\n\r\ninterface SetCompaniesAction {\r\n    type: typeof SET_COMPANIES;\r\n    payload: Companies;\r\n}\r\n\r\ninterface SetLoadingAction {\r\n  type: typeof CONSTANTS.SET_LOADING;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetErrorAction {\r\n  type: typeof CONSTANTS.SET_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type CompaniesAction = SetCompaniesAction | SetLoadingAction | SetErrorAction;","import { ThunkAction } from 'redux-thunk';\r\n\r\nimport * as CONSTANTS from '../models/constants';\r\nimport { Companies, CompaniesAction, SET_COMPANIES } from '../models/companiesTypes';\r\n\r\nimport { RootState } from '..';\r\nimport firebase from '../../firebase/config';\r\n\r\nexport const setLoading = (value: boolean): ThunkAction<void, RootState, null, CompaniesAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_LOADING,\r\n            payload: value\r\n        });\r\n    }\r\n}\r\n\r\nexport const getCompanies = (onError: () => void): ThunkAction<void, RootState, null, CompaniesAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            firebase.database().ref('companies/').on('value', (data: firebase.database.DataSnapshot) => {\r\n                if (data.val()) {\r\n                    dispatch({\r\n                        type: SET_COMPANIES,\r\n                        payload: data.val()\r\n                    });\r\n                    dispatch(setLoading(false));\r\n                }\r\n            }, error => {\r\n                dispatch(setError(error.message));\r\n                dispatch(setLoading(false));\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n            onError();\r\n            dispatch(setError(err.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const setCompanies = (companies: Companies, callback: (isSuccess: boolean) => void): ThunkAction<void, RootState, null, CompaniesAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            await firebase.database().ref('companies/').set(companies);\r\n            dispatch(getCompanies(() => {}));\r\n            callback(true);\r\n            dispatch(setLoading(false));\r\n        } catch (err) {\r\n            console.log(err);\r\n            callback(false);\r\n            dispatch(setLoading(false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const setError = (msg: string): ThunkAction<void, RootState, null, CompaniesAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_ERROR,\r\n            payload: msg\r\n        });\r\n    }\r\n}\r\n\r\n// export const setSuccess = (msg: string): ThunkAction<void, RootState, null, AuthAction> => {\r\n//     return dispatch => {\r\n//       dispatch({\r\n//         type: CONSTANTS.SET_SUCCESS,\r\n//         payload: msg\r\n//       });\r\n//     }\r\n// }","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './style.scss';\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nimport { getCompanies } from '../../../../store/actions/companiesAction';\r\nimport { RootState } from '../../../../store';\r\n\r\nimport LoadingElement from '../../../../features/LoadingElement/LoadingElement';\r\nimport { getImageFromKey } from '../../../../store/actions/imagesAction';\r\n\r\nimport { Company } from '../../../../store/models/companiesTypes';\r\n\r\nconst Companies: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { companies } = useSelector((state: RootState) => state.companies);\r\n    const { images } = useSelector((state: RootState) => state.images);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCompanies(() => console.error('error on get companies')));\r\n    }, [dispatch]);\r\n\r\n    const renderImage = (company: Company) => {\r\n        if (images) {\r\n            const image = getImageFromKey(company.image as string, images);\r\n            return (\r\n                <LazyLoadImage\r\n                    alt={`Amandine Papon - ${company.name}`}\r\n                    placeholderSrc={image.pixelized}\r\n                    src={image.full}\r\n                    effect='blur'\r\n                    className='companies-item-logo'\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"companies-item-logo\">\r\n                    <LoadingElement width='100%' height='100%' rounded={true} />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const renderCompanies = () => {\r\n        if (companies && companies.items) {\r\n            return companies.items.map((company, index) => {\r\n                return (\r\n                    <div className=\"companies-item\" key={`company-${index}`}>\r\n                        <a href={company.link} className=\"companies-item-link\" target='_blank' rel=\"noreferrer\">\r\n                            {renderImage(company)}\r\n                        </a>\r\n                    </div>\r\n                );\r\n            });\r\n        } else {\r\n            const toReturn = new Array(5);\r\n            for (let index = 0; index < 5; index += 1) {\r\n                toReturn[index] = (\r\n                    <div className=\"companies-item\" key={`company-${index}`}>\r\n                        <div className=\"companies-item-link\">\r\n                            <LoadingElement width='100%' height='200px' rounded={true} />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            return toReturn;\r\n        }\r\n    }\r\n\r\n    if (companies) {\r\n        return (\r\n            <section className=\"companies\">\r\n                <div className=\"companies-container\">\r\n                    <h2 className=\"title\">{companies.title}</h2>\r\n                    <div className=\"companies-list\">{renderCompanies()}</div>\r\n                </div>\r\n            </section>\r\n        );\r\n    } else {\r\n        return (\r\n            <section className=\"companies\">\r\n                <div className=\"companies-container\">\r\n                    <h2 className=\"title\"><LoadingElement width='50%' height='49px' rounded={true} /></h2>\r\n                    <div className=\"companies-list\">{renderCompanies()}</div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Companies;","import React, { CSSProperties, FocusEvent } from 'react';\r\nimport './style.scss';\r\n\r\nimport FieldModel from './model';\r\nimport { Image } from '../../../store/models/imagesTypes';\r\n\r\nexport interface FieldProps {\r\n    field: FieldModel;\r\n    keyId: number;\r\n    fieldChanged: (field: FieldModel) => void;\r\n    onBlur: (field: FieldModel) => void;\r\n    onImagesChanged?: (indexGroup?: number) => void;\r\n    indexGroup?: number;\r\n}\r\n\r\nexport interface FieldState {\r\n    isFocus: boolean;\r\n    openImage?: boolean;\r\n    editorValue?: any;\r\n    listValues?: Array<any[]>;\r\n    displayedValue?: Array<JSX.Element>;\r\n    images?: Array<Image>;\r\n}\r\n\r\nclass Field extends React.Component<FieldProps, FieldState> {\r\n    constructor(props: FieldProps | Readonly<FieldProps>) {\r\n        super(props);\r\n        this.state = {\r\n            isFocus: this.props.field.value ? true : false,\r\n            openImage: false\r\n        };\r\n    }\r\n\r\n    handleFocus = (e: FocusEvent | any) => {\r\n        if (e) { e.preventDefault(); }\r\n        this.setState({isFocus: true});\r\n    }\r\n\r\n    handleBlur = (e: FocusEvent) => {\r\n        e.preventDefault();\r\n        this.props.onBlur(this.props.field);\r\n    }\r\n\r\n    handleChanged = (value: any) => {\r\n        const field = this.props.field;\r\n        field.value = value;\r\n        this.props.fieldChanged(field);\r\n    }\r\n\r\n    renderRequired() {\r\n        if (this.props.field.required && this.props.field.label !== '') {\r\n            return <span className=\"required\">*</span>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderError() {\r\n        if (this.props.field.error) {\r\n            return <span className=\"field-error\">{this.props.field.error}</span>\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    renderFieldType() {}\r\n\r\n    render() {\r\n        const fieldStyle = {\r\n            width: `calc(${this.props.field.size ? `${this.props.field.size}%` : '100%'} - 20px)`,\r\n        } as CSSProperties\r\n        return (\r\n            <div\r\n                key={`input-${this.props.keyId}`}\r\n                onBlur={this.handleBlur}\r\n                className={`field-container${this.state.isFocus ? ' focus' : ''}${this.props.field.error ? ' error' : ''}`}\r\n                style={fieldStyle}\r\n            >\r\n                <label htmlFor={this.props.keyId.toString()} className='field-label'>\r\n                    {this.props.field.label}\r\n                    {this.renderRequired()}\r\n                </label>\r\n                {this.renderFieldType()}\r\n                {this.renderError()}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Field;","import React from 'react';\r\nimport './style.scss';\r\n\r\nimport Field from '../Field';\r\n\r\nclass Input extends Field {\r\n    renderFieldType() {\r\n        if (this.props.field.type === 'textarea') {\r\n            return (\r\n                <textarea\r\n                    name=\"\"\r\n                    id={this.props.keyId.toString()}\r\n                    placeholder={this.props.field.placeholder}\r\n                    value={this.props.field.value}\r\n                    onChange={e => { this.handleChanged(e.target.value); this.handleFocus(null); }}\r\n                    required={this.props.field.required}\r\n                    onBlur={this.handleBlur}\r\n                    onFocus={this.handleFocus}\r\n                    className=\"field-input field-textarea\">\r\n                </textarea>\r\n            );\r\n        } else {\r\n            return (\r\n                <input\r\n                    type={this.props.field.type}\r\n                    id={this.props.keyId.toString()}\r\n                    name={this.props.keyId.toString()}\r\n                    placeholder={this.props.field.placeholder}\r\n                    value={this.props.field.value}\r\n                    onChange={e => { this.handleChanged(e.target.value); this.handleFocus(null); }}\r\n                    required={this.props.field.required}\r\n                    onBlur={this.handleBlur}\r\n                    onFocus={this.handleFocus}\r\n                    className='field-input'\r\n                />\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default Input;","import React, { CSSProperties } from 'react';\r\nimport './style.scss';\r\n\r\nimport Field from '../Field';\r\n\r\nclass Checkbox extends Field {\r\n    renderFieldType() {\r\n        return (\r\n            <input\r\n                type=\"checkbox\"\r\n                className=\"field-checkbox\"\r\n                id={this.props.keyId.toString()}\r\n                name={this.props.keyId.toString()}\r\n                onChange={e => { this.handleChanged(e.target.value); this.handleFocus(null); }}\r\n                required={this.props.field.required}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let fieldStyle = {} as CSSProperties;\r\n        if (this.props.field.size !== 'center') {\r\n            fieldStyle = {\r\n                width: `calc(${this.props.field.size ? `${this.props.field.size}%` : '100%'} - 20px)`,\r\n            }\r\n        } else {\r\n            fieldStyle = {\r\n                width: `fit-content`,\r\n                margin: '0 auto'\r\n            }\r\n        }\r\n        const htmlText = {__html: this.props.field.htmlText? this.props.field.htmlText : '<i style=\"color: red\">Il faut définir htmlText</i>'};\r\n        return (\r\n            <div\r\n                key={`input-${this.props.keyId}`}\r\n                onBlur={this.handleBlur}\r\n                className={`field-container${this.state.isFocus ? ' focus' : ''}${this.props.field.error ? ' error' : ''}`}\r\n                style={fieldStyle}\r\n            >\r\n                {this.renderFieldType()}\r\n                <label htmlFor={this.props.keyId.toString()} className='field-label-checkbox' dangerouslySetInnerHTML={htmlText}>\r\n                </label>\r\n                {this.renderError()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkbox;","import React, { ChangeEvent, FC, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport './style.scss';\r\n\r\nimport {\r\n    FaTrash\r\n} from 'react-icons/fa';\r\n\r\nimport LoadingElement from '../../../../features/LoadingElement/LoadingElement';\r\n\r\nimport { getImages, addNewImage, deleteImageFromKey } from '../../../../store/actions/imagesAction';\r\nimport { RootState } from '../../../../store';\r\nimport { Image } from '../../../../store/models/imagesTypes';\r\n\r\ninterface SelectImagesProps {\r\n    onPage?: boolean;\r\n    onClose: () => void;\r\n    onValid: (key: string) => void;\r\n}\r\n\r\nconst SelectImages: FC<SelectImagesProps> = (props: SelectImagesProps) => {\r\n    const dispatch = useDispatch();\r\n    const { images } = useSelector((state: RootState) => state.images);\r\n    const [keySelected, setKeySelected] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(getImages(() => {console.log('error')}));\r\n    }, [dispatch]);\r\n    \r\n    \r\n    const handleUploadImages = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const files = event.target.files;\r\n        if (files) {\r\n            for (let i = 0; i < files.length; i += 1) {\r\n                dispatch(addNewImage(\r\n                    files[i],\r\n                    () => console.log('error on upload images'),\r\n                    (key: string | null) => {\r\n                        if (key) setKeySelected(key);\r\n                    })\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    const changeSelectedKey = (key: string, e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n        if (!props.onPage) setKeySelected(key);\r\n    }\r\n\r\n    const onDelete = (image: Image, e: React.MouseEvent<SVGElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n        dispatch(deleteImageFromKey(image));\r\n    }\r\n\r\n    const renderImages = () => {\r\n        if (images) {\r\n            return images.map((image, index) =>\r\n                <div\r\n                    className={`select-images-image${!props.onPage && keySelected === image.key ? ' selected' : ''}`}\r\n                    key={`select-images-image-${index}`}\r\n                    onClick={e => changeSelectedKey(image.key, e)}\r\n                >\r\n                    <LazyLoadImage\r\n                        alt='Amandine Papon - select-images'\r\n                        placeholderSrc={image.pixelized}\r\n                        src={image.full}\r\n                        effect='blur'\r\n                    />\r\n                    {props.onPage ? <FaTrash onClick={e => onDelete(image, e)} /> : <></>}\r\n                </div>\r\n            )\r\n        } else {\r\n            const toReturn = [];\r\n            for (let i = 0; i < 20; i += 1) {\r\n                toReturn.push(<div className=\"select-images-image\" key={`select-images-loading-${i}`}><LoadingElement width='100%' height='100%' rounded={false} /></div>);\r\n            }\r\n            return toReturn;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`select-images${props.onPage ? ' on-page' : ''}`}>\r\n            <div className=\"select-images-content\">\r\n                <div className=\"select-images-head\">\r\n                    {!props.onPage ? <h2 className=\"title\">Choisir une image</h2> : <></>}\r\n                    <div className=\"select-images-file\">\r\n                        <input className=\"select-images-file-input\" type=\"file\" id='file' placeholder=\"Choose file\" multiple onChange={handleUploadImages} />\r\n                        <label htmlFor=\"file\" className=\"select-images-file-label\">Téléverser des images</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"select-images-container\">\r\n                    {renderImages().reverse()}\r\n                </div>\r\n                {!props.onPage ? \r\n                    (<div className=\"select-images-footer\">\r\n                        <button className=\"cancel\" onClick={(e) => {props.onClose(); e.preventDefault(); setKeySelected('');}}>Annuler</button>\r\n                        <button className=\"valid\" onClick={(e) => {props.onValid(keySelected); e.preventDefault(); setKeySelected('');}}>Valider</button>\r\n                    </div>)\r\n                    : <></>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectImages;","import React, { CSSProperties } from 'react';\r\nimport './style.scss';\r\n\r\nimport SelectImages from '../../../app/Admin/components/SelectImages/selectImages';\r\nimport Field from '../Field';\r\nimport { getImageFromKey } from '../../../store/actions/imagesAction';\r\nimport { Image } from '../../../store/models/imagesTypes';\r\n\r\nclass ImageField extends Field {\r\n    onValid = (key: string) => {\r\n        if (this.props.onImagesChanged) this.props.onImagesChanged(this.props.indexGroup);\r\n        this.setState({openImage: false});\r\n        this.handleChanged(key);\r\n        this.handleFocus(null);\r\n    }\r\n\r\n    renderFieldType() {\r\n        const images = this.props.field.images ? this.props.field.images : [] as Array<Image>;\r\n        const image = images.length > 0 ? getImageFromKey(this.props.field.value, images) : null;\r\n        const style = {\r\n            height: this.props.field.height ? this.props.field.height : '200px',\r\n            marginTop: this.props.field.height ? '0' : undefined\r\n        } as CSSProperties;\r\n        const styleModifyText = {\r\n            marginTop: this.props.field.height ? '20px' : undefined\r\n        } as CSSProperties;\r\n\r\n        return (\r\n            <>\r\n                <div className='field-image' onClick={() => this.setState({openImage: true})} style={style}>\r\n                    {image ?\r\n                        <img src={image.full} alt=\"field\" className=\"field-image-photo\" style={style} /> :\r\n                        <div className=\"field-image-no-photo\">\r\n                            <p style={styleModifyText}>Pas d'image sélectionnée</p>\r\n                        </div>\r\n                    }\r\n                    <div className=\"field-image-text\">\r\n                        <p style={styleModifyText}>Modifier</p>\r\n                    </div>\r\n                </div>\r\n                {this.state.openImage ? <SelectImages onClose={() => this.setState({openImage: false})} onValid={this.onValid} /> : <></>}\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ImageField;","import { Image } from \"../../../store/models/imagesTypes\";\r\n\r\nexport const INPUT = 'INPUT';\r\nexport const CHECKBOX = 'CHECKBOX';\r\nexport const IMAGE = 'IMAGE';\r\n\r\nexport interface ListModel {\r\n    type: typeof INPUT | typeof CHECKBOX | typeof IMAGE;\r\n    label: string;\r\n    size?: number;\r\n    images?: Array<Image>;\r\n}\r\n\r\nexport default interface FieldModel {\r\n    label: string;\r\n    type: string;\r\n    value: any | Array<FieldModel>;\r\n    htmlText?: string;\r\n    placeholder?: string;\r\n    required?: boolean;\r\n    error?: string;\r\n    size?: number | string;\r\n    images?: Array<Image>;\r\n    fieldID?: number;\r\n    parentID?: number;\r\n    model?: Array<ListModel>;\r\n    height?: string;\r\n}\r\n","import React, { FC } from 'react';\r\nimport './style.scss';\r\n\r\ninterface FabButtonProps {\r\n    onClick: () => void;\r\n}\r\n\r\nconst FabButton: FC<FabButtonProps> = (props: FabButtonProps) => {\r\n    return <button className=\"fab-button\" onClick={e => {e.preventDefault(); props.onClick();}}>+</button>\r\n}\r\n\r\nexport default FabButton;","import React, { CSSProperties } from 'react';\r\nimport './style.scss';\r\n\r\nimport {\r\n    FaTrash\r\n} from 'react-icons/fa';\r\n\r\nimport Field from '../Field';\r\nimport Input from '../Input';\r\nimport ImageField from '../ImageField/imageField';\r\nimport Checkbox from '../Checkbox';\r\nimport FieldModel, { INPUT, IMAGE, CHECKBOX, ListModel } from '../Field/model';\r\nimport FabButton from '../../FabButton/fabButton';\r\n\r\ninterface PropsField {\r\n    field: FieldModel;\r\n    keyId: number;\r\n    fieldChanged: (field: FieldModel) => void;\r\n    onBlur: (field: FieldModel) => void;\r\n    onImagesChanged?: () => void;\r\n}\r\n\r\nclass List extends Field {\r\n    componentDidMount() {\r\n        this.setState({\r\n            listValues: this.props.field.value,\r\n            images: this.props.field.images\r\n        });\r\n        this.renderValues(this.props.field.value);\r\n    }\r\n\r\n    handleAddFields = () => {\r\n        if (this.props.field.model && this.state.listValues) {\r\n            const list = this.state.listValues.slice();\r\n            const n_value = this.props.field.model.slice().map(item => {\r\n                return undefined;\r\n            });\r\n            list.push(n_value);\r\n            this.renderValues(list);\r\n            this.setState({listValues: list});\r\n        }\r\n    }\r\n\r\n    handleChange = (field: FieldModel, parentID?: number) => {\r\n        if (this.state.listValues && field.parentID !== undefined && field.fieldID !== undefined) {\r\n            const values = this.state.listValues.slice();\r\n            values[field.parentID][field.fieldID] = field.value;\r\n            const m_field = this.props.field;\r\n            m_field.value = values;\r\n            this.props.fieldChanged(m_field);\r\n        } else {\r\n            console.error('field not set correctly');\r\n        }\r\n    }\r\n\r\n    handleBlur = (obj: any, parentID?: number) => {\r\n        console.log(obj, parentID);\r\n    }\r\n\r\n    handleDelete = (index: number, e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        console.log(`delete : ${index}`);\r\n        if (this.state.listValues) {\r\n            const values = this.state.listValues.slice();\r\n            values.splice(index, 1);\r\n            const m_field = this.props.field;\r\n            m_field.value = values;\r\n            this.props.fieldChanged(m_field);\r\n            this.renderValues(values);\r\n            this.setState({listValues: values});\r\n        } else {\r\n            console.error('field not set correctly');\r\n        }\r\n    }\r\n\r\n    renderTableHead = () => {\r\n        let toRender: JSX.Element[] = [];\r\n        if (this.props.field.model) {\r\n            toRender = this.props.field.model.slice().map((item, index) => {\r\n                const fieldStyle = {\r\n                    width: `${item.size ? `${item.size}%` : 'unset'}`,\r\n                } as CSSProperties;\r\n\r\n                return <th key={index} style={fieldStyle}>{item.label}</th>;\r\n            });\r\n        }\r\n        toRender.push(<th key='delete'></th>);\r\n        return toRender;\r\n    }\r\n\r\n    renderType = (model: ListModel, value: any, key: number, parentKey: number) => {\r\n        const field = {\r\n            label: '',\r\n            type: '',\r\n            value: value,\r\n            fieldID: key,\r\n            parentID: parentKey\r\n        } as FieldModel;\r\n\r\n        const fieldProps = {\r\n            field: field,\r\n            keyId: key,\r\n            fieldChanged: this.handleChange,\r\n            onBlur: this.handleBlur\r\n        } as PropsField;\r\n\r\n        switch(model.type) {\r\n            case INPUT:\r\n                fieldProps.field.type = 'text';\r\n                return <Input {...fieldProps} />\r\n            case IMAGE:\r\n                fieldProps.field.type = 'image';\r\n                fieldProps.field.height = '40px';\r\n                fieldProps.field.images = this.state.images ? this.state.images : this.props.field.images;\r\n                fieldProps.onImagesChanged = () => {\r\n                    if (this.props.onImagesChanged) {\r\n                        this.props.onImagesChanged();\r\n                        this.setState({images: this.props.field.images});\r\n                        fieldProps.field.images = this.props.field.images;\r\n                    }\r\n                };\r\n                return <ImageField {...fieldProps} />\r\n            case CHECKBOX:\r\n                fieldProps.field.type = 'checkbox';\r\n                return <Checkbox {...fieldProps} />\r\n            default:\r\n                return <></>;\r\n        }\r\n    }\r\n\r\n    renderValues = (listValues: Array<any[]>) => {\r\n        if (listValues) {\r\n            let toRender = undefined;\r\n            if (this.props.field.model) {\r\n                toRender = listValues.slice().map((items: Array<any>, indexValue: number) => {\r\n                    const itemsRender = items.map((item, indexItem) => {\r\n                        const model = this.props.field.model;\r\n\r\n                        return (\r\n                        <td key={`list-item-${indexValue}-${indexItem}`}>\r\n                            {model ? this.renderType(model[indexItem], item, indexItem, indexValue) : <></>}\r\n                        </td>);\r\n                    });\r\n                    itemsRender.push(\r\n                        <td key={`delete-${indexValue}`} className='form-list-delete'>\r\n                            <FaTrash onClick={e => this.handleDelete(indexValue, e)} className='form-list-delete-icon' />\r\n                        </td>\r\n                    );\r\n                    return <tr key={indexValue}>{itemsRender}</tr>;\r\n                });\r\n            }\r\n            this.setState({displayedValue: toRender});\r\n        }\r\n    }\r\n\r\n    renderFieldType() {\r\n        return (\r\n            <>\r\n                <table className=\"form-list\">\r\n                    <thead>\r\n                        <tr>\r\n                            {this.renderTableHead()}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.displayedValue}\r\n                    </tbody>\r\n                </table>\r\n                {/* {this.state.fields ? <Fields fields={this.state.fields} addErrorMessage={(field) => undefined} keyID={0} /> : <></>} */}\r\n                <FabButton onClick={this.handleAddFields} />\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default List;","import React from 'react';\r\nimport RichTextEditor, { EditorValue, ToolbarConfig } from 'react-rte';\r\n\r\nimport Field, { FieldProps } from '../Field';\r\n\r\nexport default class RichText extends Field {\r\n    toolbarConfig = {\r\n        display: ['INLINE_STYLE_BUTTONS', 'BLOCK_ALIGNMENT_BUTTONS', 'BLOCK_TYPE_BUTTONS', 'LINK_BUTTONS', 'BLOCK_TYPE_DROPDOWN', 'HISTORY_BUTTONS'],\r\n        INLINE_STYLE_BUTTONS: [\r\n          {label: 'Bold', style: 'BOLD', className: 'custom-css-class'},\r\n          {label: 'Italic', style: 'ITALIC'},\r\n          {label: 'Underline', style: 'UNDERLINE'}\r\n        ],\r\n        BLOCK_ALIGNMENT_BUTTONS: [\r\n            {label: 'Align Left', style: 'ALIGN_LEFT'},\r\n            {label: 'Align Center', style: 'ALIGN_CENTER'},\r\n            {label: 'Align Right', style: 'ALIGN_RIGHT'}\r\n        ],\r\n        BLOCK_TYPE_DROPDOWN: [\r\n          {label: 'Normal', style: 'unstyled'},\r\n          {label: 'Heading Large', style: 'header-one'},\r\n          {label: 'Heading Medium', style: 'header-two'},\r\n          {label: 'Heading Small', style: 'header-three'}\r\n        ],\r\n        BLOCK_TYPE_BUTTONS: [\r\n          {label: 'UL', style: 'unordered-list-item'},\r\n          {label: 'OL', style: 'ordered-list-item'}\r\n        ]\r\n      } as ToolbarConfig;\r\n\r\n    constructor(props: FieldProps) {\r\n        super(props);\r\n        this.state = {\r\n            isFocus: this.props.field.value ? true : false,\r\n            editorValue: RichTextEditor.createValueFromString(this.props.field.value ? this.props.field.value : '', 'html'),\r\n        };\r\n    }\r\n\r\n    onChange = (value: EditorValue) => {\r\n        this.setState({editorValue: value});\r\n        this.handleChanged(value.toString('html'));\r\n    }\r\n\r\n    renderFieldType() {\r\n        return (\r\n            <RichTextEditor\r\n                value={this.state.editorValue}\r\n                onChange={this.onChange}\r\n                placeholder={this.props.field.placeholder}\r\n                toolbarConfig={this.toolbarConfig}\r\n            />\r\n        );\r\n    }\r\n}","import React, { CSSProperties } from 'react';\r\n\r\nimport Input from '../Input';\r\nimport Checkbox from '../Checkbox';\r\nimport ImageField from '../ImageField/imageField';\r\nimport List from '../List/list';\r\nimport RichText from '../RichText/richText';\r\nimport FieldModel from '../Field/model';\r\n\r\ninterface FieldsProps {\r\n    fields: Array<FieldModel>;\r\n    onDetectChanges?: (fields: Array<FieldModel>, parentID: number) => void;\r\n    onChange?: (fields: Array<FieldModel>, parentID: number) => void;\r\n    onBlur?: (obj: FieldModel | Array<FieldModel>, parentID?: number) => void;\r\n    onImagesChanged?: () => void;\r\n    addErrorMessage: (field: FieldModel) => string | undefined;\r\n    keyID: number;\r\n}\r\n\r\ninterface PropsField {\r\n    field: FieldModel;\r\n    keyId: number;\r\n    fieldChanged: (field: FieldModel) => void;\r\n    onBlur: (field: FieldModel) => void;\r\n    onImagesChanged?: () => void;\r\n}\r\n\r\nexport default class Fields extends React.Component<FieldsProps, {fields: Array<FieldModel>}> {\r\n    constructor(props: FieldsProps) {\r\n        super(props);\r\n        this.state = {\r\n            fields: this.props.fields\r\n        };\r\n    }\r\n\r\n    onDetectChanges = (fields: Array<FieldModel>, parentID: number) => {\r\n        const p_fields = this.props.fields.slice().map(p_field => {\r\n            return p_field;\r\n        });\r\n        if (this.props.onDetectChanges) this.props.onDetectChanges(p_fields, this.props.keyID);\r\n    }\r\n\r\n    onChange = (obj: FieldModel | Array<FieldModel>, parentID?: number) => {\r\n        if (obj.hasOwnProperty('type') && (obj as FieldModel).type !== 'group') {\r\n            const fields = this.props.fields.slice().map(p_field => {\r\n                return p_field;\r\n            });\r\n            if (this.props.onChange) this.props.onChange(fields, this.props.keyID);\r\n            else this.onDetectChanges(fields, this.props.keyID);\r\n        } else if (obj.hasOwnProperty('type')) {\r\n            console.log('changed group ?');\r\n        } else {\r\n            this.onDetectChanges((obj as Array<FieldModel>), this.props.keyID);\r\n        }\r\n    }\r\n\r\n    onBlur = (obj: FieldModel | Array<FieldModel>, parentID?: number) => {\r\n        if (obj.hasOwnProperty('type') && (obj as FieldModel).type !== 'group') {\r\n            const fields = this.props.fields.slice().map(p_field => {\r\n                if (p_field.fieldID === (obj as FieldModel).fieldID) {\r\n                    p_field.error = this.props.addErrorMessage(p_field);\r\n                }\r\n                return p_field;\r\n            });\r\n            if (this.props.onBlur) this.props.onBlur(fields, this.props.keyID);\r\n        } else if (obj.hasOwnProperty('type')) {\r\n            console.log('blur group ?');\r\n        } else {\r\n            this.onDetectChanges((obj as Array<FieldModel>), this.props.keyID);\r\n        }\r\n    }\r\n\r\n    renderFields() {\r\n        const toRender = this.props.fields.slice().map((field, index) => {\r\n            const fieldProps = {\r\n                keyId: index,\r\n                field: field,\r\n                fieldChanged: this.onChange,\r\n                onBlur: this.onBlur,\r\n                onImagesChanged: field.type === 'image' || field.type === 'list' ? this.props.onImagesChanged : undefined\r\n            } as PropsField;\r\n\r\n            switch (field.type) {\r\n                case 'checkbox':\r\n                    return (\r\n                        <Checkbox key={`field-${index}`} {...fieldProps} />\r\n                    );\r\n                case 'image':\r\n                    return (\r\n                        <ImageField key={`field-${index}`} {...fieldProps} />\r\n                    );\r\n                case 'richtext':\r\n                    return (\r\n                        <RichText key={`field-${index}`} {...fieldProps} />\r\n                    );\r\n                case 'list':\r\n                    return (\r\n                        <List key={`field-${index}`} {...fieldProps} />\r\n                    )\r\n                case 'group':\r\n                    const fieldStyle = {\r\n                        width: `calc(${field.size ? `${field.size}%` : '100%'} - 20px)`,\r\n                    } as CSSProperties;\r\n                    return (\r\n                        <div\r\n                            className=\"form-group\"\r\n                            key={`group-${index}`}\r\n                            style={fieldStyle}\r\n                        >\r\n                            {field.label.length > 0 ? <h3 className=\"title\">{field.label}</h3> : <></>}\r\n                            <Fields\r\n                                fields={field.value}\r\n                                addErrorMessage={this.props.addErrorMessage}\r\n                                keyID={index}\r\n                                onChange={this.onChange}\r\n                                onBlur={this.onBlur}\r\n                                onImagesChanged={this.props.onImagesChanged}\r\n                            />\r\n                        </div>\r\n                    );\r\n                default:\r\n                    return (\r\n                        <Input key={`field-${index}`} {...fieldProps} />\r\n                    );\r\n            }\r\n        });\r\n        return toRender;\r\n    }\r\n\r\n    render() {\r\n        return <>{this.renderFields()}</>;\r\n    }\r\n}","import { AboutState, AboutAction, SET_ABOUT } from '../models/aboutTypes';\r\nimport * as CONSTANTS from '../models/constants';\r\n\r\nconst intialState: AboutState = {\r\n    about: null,\r\n    loading: false,\r\n    error: ''\r\n}\r\n\r\nconst aboutReducer = (state = intialState, action: AboutAction) => {\r\n    switch(action.type) {\r\n        case SET_ABOUT:\r\n            return {\r\n                ...state,\r\n                about: action.payload\r\n            }\r\n        case CONSTANTS.SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case CONSTANTS.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default aboutReducer;","import { AuthAction, AuthState } from '../models/authTypes';\r\nimport * as CONSTANTS from '../models/constants';\r\n\r\nconst initialState: AuthState = {\r\n    user: null,\r\n    authenticated: false,\r\n    loading: false,\r\n    error: '',\r\n    needVerification: false,\r\n    success: ''\r\n}\r\n\r\nconst authReducer = (state = initialState, action: AuthAction) => {\r\n    switch(action.type) {\r\n        case CONSTANTS.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                authenticated: true\r\n            }\r\n        case CONSTANTS.SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case CONSTANTS.SIGN_OUT:\r\n            return {\r\n                ...state,\r\n                user: null,\r\n                authenticated: false,\r\n                loading: false\r\n            }\r\n        case CONSTANTS.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case CONSTANTS.SET_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { BannerState, BannerAction, SET_BANNER } from '../models/bannerTypes';\r\nimport * as CONSTANTS from '../models/constants';\r\n\r\nconst intialState: BannerState = {\r\n    banner: null,\r\n    loading: false,\r\n    error: ''\r\n}\r\n\r\nconst bannerReducer = (state = intialState, action: BannerAction) => {\r\n    switch(action.type) {\r\n        case SET_BANNER:\r\n            return {\r\n                ...state,\r\n                banner: action.payload\r\n            }\r\n        case CONSTANTS.SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case CONSTANTS.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default bannerReducer;","import { CompaniesState, CompaniesAction, SET_COMPANIES } from '../models/companiesTypes';\r\nimport * as CONSTANTS from '../models/constants';\r\n\r\nconst intialState: CompaniesState = {\r\n    companies: null,\r\n    loading: false,\r\n    error: ''\r\n}\r\n\r\nconst companiesReducer = (state = intialState, action: CompaniesAction) => {\r\n    switch(action.type) {\r\n        case SET_COMPANIES:\r\n            return {\r\n                ...state,\r\n                companies: action.payload\r\n            }\r\n        case CONSTANTS.SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case CONSTANTS.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default companiesReducer;","import { ImagesState, ImagesAction, SET_IMAGES } from '../models/imagesTypes';\r\nimport * as CONSTANTS from '../models/constants';\r\n\r\nconst intialState: ImagesState = {\r\n    images: null,\r\n    loading: false,\r\n    error: ''\r\n}\r\n\r\nconst imagesReducer = (state = intialState, action: ImagesAction) => {\r\n    switch(action.type) {\r\n        case SET_IMAGES:\r\n            return {\r\n                ...state,\r\n                images: action.payload\r\n            }\r\n        case CONSTANTS.SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case CONSTANTS.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default imagesReducer;","import * as CONSTANTS from './constants';\r\nexport const SET_LOCATION = 'SET_LOCATION';\r\nexport const SET_SIZE = 'SET_SIZE';\r\n\r\nexport interface Location {\r\n    title: string;\r\n    text: string| null;\r\n}\r\n\r\nexport interface LocationState {\r\n    location: Location | null;\r\n    error: string;\r\n    loading: boolean;\r\n    size: number | undefined;\r\n}\r\n\r\ninterface SetLocationAction {\r\n  type: typeof SET_LOCATION;\r\n  payload: Location;\r\n}\r\ninterface SetSizeAction {\r\n    type: typeof SET_SIZE;\r\n    payload: number | undefined;\r\n}\r\n\r\ninterface SetLoadingAction {\r\n  type: typeof CONSTANTS.SET_LOADING;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetErrorAction {\r\n  type: typeof CONSTANTS.SET_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type LocationAction = SetLocationAction | SetSizeAction | SetLoadingAction | SetErrorAction;","import { LocationState, LocationAction, SET_LOCATION, SET_SIZE } from '../models/locationTypes';\r\nimport * as CONSTANTS from '../models/constants';\r\n\r\nconst intialState: LocationState = {\r\n    location: null,\r\n    loading: false,\r\n    error: '',\r\n    size: undefined,\r\n}\r\n\r\nconst locationReducer = (state = intialState, action: LocationAction) => {\r\n    switch(action.type) {\r\n        case SET_LOCATION:\r\n            return {\r\n                ...state,\r\n                location: action.payload\r\n            }\r\n        case SET_SIZE:\r\n            return {\r\n                ...state,\r\n                size: action.payload\r\n            }\r\n        case CONSTANTS.SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case CONSTANTS.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default locationReducer;","import * as CONSTANTS from './constants';\r\nexport const SET_SERVICES = 'SET_SERVICES';\r\nexport const SET_DISPLAY = 'SET_DISPLAY';\r\nexport const SET_CURRENT_INDEX = 'SET_CURRENT_INDEX';\r\nexport const SET_MOBILE = 'SET_MOBILE';\r\nexport const SET_TICKING = 'SET_TICKING';\r\n\r\nexport interface Service {\r\n    name: string;\r\n    desc: string;\r\n    content: string;\r\n    image: string;\r\n}\r\n\r\nexport interface Services {\r\n    title: string;\r\n    subTitle: string;\r\n    items: Array<Service>;\r\n}\r\n\r\nexport interface ServiceDisplay {\r\n  service: Service;\r\n  isDown?: boolean;\r\n  isUp?: boolean;\r\n}\r\n\r\nexport interface ServicesState {\r\n    services: Services | null;\r\n    loading: boolean;\r\n    error: string;\r\n    display: Array<ServiceDisplay> | null;\r\n    currentIndex: number;\r\n    mobile: boolean;\r\n    ticking: boolean;\r\n}\r\n\r\ninterface SetServicesAction {\r\n    type: typeof SET_SERVICES;\r\n    payload: Services;\r\n}\r\n\r\ninterface SetDisplayAction {\r\n  type: typeof SET_DISPLAY;\r\n  payload: Array<ServiceDisplay> | null;\r\n}\r\n\r\ninterface SetCurrentIndexAction {\r\n  type: typeof SET_CURRENT_INDEX;\r\n  payload: number;\r\n}\r\n\r\ninterface SetMobileAction {\r\n  type: typeof SET_MOBILE;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetTickingAction {\r\n  type: typeof SET_TICKING;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetLoadingAction {\r\n  type: typeof CONSTANTS.SET_LOADING;\r\n  payload: boolean;\r\n}\r\n\r\ninterface SetErrorAction {\r\n  type: typeof CONSTANTS.SET_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type ServicesAction = SetServicesAction | SetDisplayAction | SetCurrentIndexAction | SetMobileAction | SetTickingAction | SetLoadingAction | SetErrorAction;","import { ServicesState, ServicesAction, SET_SERVICES, SET_DISPLAY, SET_CURRENT_INDEX, SET_MOBILE, SET_TICKING } from '../models/servicesTypes';\r\nimport * as CONSTANTS from '../models/constants';\r\n\r\nconst intialState: ServicesState = {\r\n    services: null,\r\n    loading: false,\r\n    error: '',\r\n    display: null,\r\n    currentIndex: 0,\r\n    mobile: false,\r\n    ticking: false,\r\n}\r\n\r\nconst servicesReducer = (state = intialState, action: ServicesAction) => {\r\n    switch(action.type) {\r\n        case SET_SERVICES:\r\n            return {\r\n                ...state,\r\n                services: action.payload\r\n            }\r\n        case SET_DISPLAY:\r\n            return {\r\n                ...state,\r\n                display: action.payload\r\n            }\r\n        case SET_CURRENT_INDEX:\r\n            return {\r\n                ...state,\r\n                currentIndex: action.payload\r\n            }\r\n        case SET_MOBILE:\r\n            return {\r\n                ...state,\r\n                mobile: action.payload\r\n            }\r\n        case SET_TICKING:\r\n            return {\r\n                ...state,\r\n                ticking: action.payload\r\n            }\r\n        case CONSTANTS.SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case CONSTANTS.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default servicesReducer;","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport aboutReducer from './reducers/aboutReducer';\r\nimport authReducer from './reducers/authReducer';\r\nimport bannerReducer from './reducers/bannerReducer';\r\nimport companiesReducer from './reducers/companiesReducer';\r\nimport imagesReducer from './reducers/imagesReducer';\r\nimport locationReducer from './reducers/locationReducer';\r\nimport servicesReducer from './reducers/servicesReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  about: aboutReducer,\r\n  auth: authReducer,\r\n  banner: bannerReducer,\r\n  companies: companiesReducer,\r\n  images: imagesReducer,\r\n  location: locationReducer,\r\n  services: servicesReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;","import React, { FormEvent } from 'react';\r\nimport './style.scss';\r\n\r\nimport FieldModel from './Field/model';\r\nimport Fields from './Fields/fields';\r\n\r\nimport store from '../../store';\r\nimport { Image } from '../../store/models/imagesTypes';\r\n\r\ninterface FormProps {\r\n    fields: Array<FieldModel>;\r\n    getSubmitForm: (form: Array<FieldModel>) => void;\r\n    buttonForm?: string;\r\n    onDelete?: () => void;\r\n}\r\n\r\ninterface FormState {\r\n    fields: Array<FieldModel>;\r\n    isValid: boolean;\r\n    formId : string;\r\n    images?: Array<Image>;\r\n}\r\n\r\nclass Form extends React.Component<FormProps, FormState> {\r\n    constructor(props: FormProps | Readonly<FormProps>) {\r\n        super(props);\r\n        this.state = {\r\n            fields: props.fields.slice(),\r\n            isValid: false,\r\n            formId: this.generateFormId(),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateFromStore();\r\n    }\r\n\r\n    updateFromStore() {\r\n        store.subscribe(() => {\r\n            const images = store.getState().images.images;\r\n            this.setState({\r\n                images: images ? images : undefined\r\n            });\r\n        });\r\n    }\r\n\r\n    addErrorMessage = (field: FieldModel) => {\r\n        let error = undefined;\r\n        const condition = (field.required ? true : false) && (field.value === '' || field.value === null || field.value === undefined);\r\n        switch (field.type) {\r\n            case 'email':\r\n                // eslint-disable-next-line no-control-regex\r\n                const regexMail = new RegExp('([-!#-\\'*+/-9=?A-Z^-~]+(\\\\.[-!#-\\'*+/-9=?A-Z^-~]+)*|\"([]!#-[^-~ \\t]|(\\\\[\\t -~]))+\")@[0-9A-Za-z]([0-9A-Za-z-]{0,61}[0-9A-Za-z])?(.[0-9A-Za-z]([0-9A-Za-z-]{0,61}[0-9A-Za-z])?)+');\r\n                const regMailValue = !regexMail.test(field.value);\r\n                if (condition || field.value ? regMailValue : false) {\r\n                    error = 'Veuillez ajouter une adresse mail valide';\r\n                }\r\n                break;\r\n            case 'password':\r\n                if (condition) {\r\n                    error = 'Le mot de passe doit être rempli';\r\n                }\r\n                break;\r\n            case 'tel':\r\n                const regexPhone = new RegExp('^0[1-6]{1}(([0-9]{2}){4})|((s[0-9]{2}){4})|((-[0-9]{2}){4})$');\r\n                const regPhoneValue = !regexPhone.test(field.value);\r\n                if (condition || field.value ? regPhoneValue : false) {\r\n                    error = 'Veuillez ajouter un numéro de téléphone valide';\r\n                }\r\n                break;\r\n            default:\r\n                if (condition) {\r\n                    error = `Le champ ${field.label} doit être rempli`;\r\n                }\r\n                break;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    handleOnChange = (fields: Array<FieldModel>, parentID: number) => {\r\n        const form = document.getElementById(this.state.formId) as HTMLFormElement;\r\n        this.setState({fields: fields, isValid: form.checkValidity()});\r\n    }\r\n    \r\n    handleSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        const fields = this.state.fields.slice();\r\n        let isError = false;\r\n        for (let key in fields) {\r\n            if (fields[key].error) {\r\n                isError = true;\r\n            }\r\n        }\r\n        if (!isError) {\r\n            this.props.getSubmitForm(this.state.fields.slice());\r\n        }\r\n    }\r\n\r\n    changeImagesOnGroup = (fields: Array<FieldModel>) => {\r\n        return fields;\r\n    }\r\n\r\n    handleImagesChanged = () => {\r\n    }\r\n\r\n    generateFormId() {\r\n        let id = '';\r\n        while (id.length < 10) {\r\n            id += Math.random().toString(16).substring(2);\r\n        }\r\n        return id.substring(0, 10);\r\n    }\r\n\r\n    handleOnDelete = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        if (this.props.onDelete) this.props.onDelete();\r\n    }\r\n\r\n    renderButtons(formId: string) {\r\n        return (\r\n            <div className=\"form-buttons\">\r\n                <button className=\"simple-button cancel\" onClick={this.handleOnDelete}>Supprimer</button>\r\n                {this.renderButton(formId)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderButton(formId: string) {\r\n        let button = <button className=\"simple-button\" type='submit' form={formId} value='Submit' disabled={!this.state.isValid}>Envoyer</button>;\r\n        if (this.props.buttonForm) {\r\n            switch (this.props.buttonForm) {\r\n                case 'Simple': \r\n                    break;\r\n                case 'CircleArrow':\r\n                    button = (\r\n                        <div className=\"circle-arrow-container\">\r\n                            <button className=\"circle-arrow-button\" type='submit' form={formId} value='Submit' disabled={!this.state.isValid}>\r\n                                <span className=\"circle-arrow-circle\" aria-hidden='true'>\r\n                                    <span className=\"circle-arrow-icon\"></span>\r\n                                </span>\r\n                                <span className=\"circle-arrow-text\">Envoyer</span>\r\n                            </button>\r\n                        </div>\r\n                    );\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return button;\r\n    }\r\n\r\n    renderFieldsData(fields: Array<FieldModel>) {\r\n        const r_fields = fields.slice().map((field, index) => {\r\n            field.fieldID = index;\r\n            if (field.type === 'group') {\r\n                field.value = this.renderFieldsData(field.value);\r\n            }\r\n            return field;\r\n        });\r\n        return r_fields;\r\n    }\r\n\r\n    render() {\r\n        const fields = this.state.fields.slice();\r\n        return (\r\n            <form onSubmit={this.handleSubmit} id={this.state.formId} className='form'>\r\n                <Fields\r\n                    fields={this.renderFieldsData(fields)}\r\n                    addErrorMessage={this.addErrorMessage}\r\n                    keyID={0}\r\n                    onDetectChanges={this.handleOnChange}\r\n                    onImagesChanged={this.handleImagesChanged}\r\n                />\r\n                {this.props.onDelete ? this.renderButtons(this.state.formId) : this.renderButton(this.state.formId)}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport './style.scss';\r\n\r\nimport Form from '../../../../features/Form';\r\nimport FieldModel from '../../../../features/Form/Field/model';\r\n\r\nclass Contact extends React.Component<{}, { form: Array<FieldModel> }> {\r\n    constructor(props: {} | Readonly<{}>) {\r\n        super(props);\r\n        this.state = {\r\n            form: [\r\n                {\r\n                    label: 'Adresse Mail',\r\n                    type: 'email',\r\n                    placeholder: 'exemple@exemple.fr',\r\n                    value: '',\r\n                    size: 50,\r\n                    required: true,\r\n                },{\r\n                    label: 'Nom, Prénom',\r\n                    type: 'text',\r\n                    placeholder: 'John Doe',\r\n                    value: '',\r\n                    size: 50,\r\n                    required: true,\r\n                },{\r\n                    label: 'Entreprise',\r\n                    type: 'text',\r\n                    value: '',\r\n                    size: 50,\r\n                },{\r\n                    label: 'Téléphone',\r\n                    type: 'tel',\r\n                    placeholder: '06********',\r\n                    value: '',\r\n                    size: 50,\r\n                },{\r\n                    label: 'Message',\r\n                    type: 'textarea',\r\n                    placeholder: 'Votre message...',\r\n                    value: '',\r\n                    required: true,\r\n                },{\r\n                    label: '',\r\n                    type: 'checkbox',\r\n                    htmlText: 'J\\'ai lu et j\\'accepte la <a href=\"https://localhost:3000/policy\" className=\"link\">politique de confidentialité</a>',\r\n                    value: false,\r\n                    size: 'center',\r\n                    required: true,\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.handleSizes);\r\n        this.handleSizes();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleSizes);\r\n    }\r\n\r\n    handleSizes = () => {\r\n        const form = this.state.form.slice().map(field => {\r\n            if (field.size && field.size !== 'center') {\r\n                if (window.innerWidth <= 768) {\r\n                    field.size = 100;\r\n                } else {\r\n                    field.size = 50;\r\n                }\r\n            }\r\n            return field;\r\n        });\r\n        this.setState({form: form});\r\n    }\r\n\r\n    handleSubmit = (form: Array<FieldModel>) => {\r\n        this.setState({ form: form });\r\n        console.log(this.state.form);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className='contact'>\r\n                <h2 className=\"title\">Vous souhaitez me contacter ?</h2>\r\n                <Form fields={this.state.form} getSubmitForm={this.handleSubmit} buttonForm='CircleArrow'/>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import { ThunkAction } from 'redux-thunk';\r\n\r\nimport * as CONSTANTS from '../models/constants';\r\nimport { LocationAction, SET_LOCATION, SET_SIZE, Location } from '../models/locationTypes';\r\n\r\nimport { RootState } from '..';\r\nimport firebase from '../../firebase/config';\r\n\r\nexport const setLoading = (value: boolean): ThunkAction<void, RootState, null, LocationAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_LOADING,\r\n            payload: value\r\n        });\r\n    }\r\n}\r\n\r\nexport const getLocation = (onError: () => void): ThunkAction<void, RootState, null, LocationAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            firebase.database().ref('location/').on('value', (data: firebase.database.DataSnapshot) => {\r\n                if (data.val()) {\r\n                    dispatch({\r\n                        type: SET_LOCATION,\r\n                        payload: data.val()\r\n                    });\r\n                    dispatch(setLoading(false));\r\n                }\r\n            }, error => {\r\n                dispatch(setError(error.message));\r\n                dispatch(setLoading(false));\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n            onError();\r\n            dispatch(setError(err.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const setSize = (size: number | undefined): ThunkAction<void, RootState, null, LocationAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: SET_SIZE,\r\n            payload: size\r\n        });\r\n    }\r\n}\r\n\r\nexport const setLocation = (location: Location, callback: (isSuccess: boolean) => void): ThunkAction<void, RootState, null, LocationAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            await firebase.database().ref('location/').set(location);\r\n            dispatch(getLocation(() => {}));\r\n            callback(true);\r\n            dispatch(setLoading(false));\r\n        } catch (err) {\r\n            console.log(err);\r\n            callback(false);\r\n            dispatch(setLoading(false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const setError = (msg: string): ThunkAction<void, RootState, null, LocationAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_ERROR,\r\n            payload: msg\r\n        });\r\n    }\r\n}\r\n\r\n// export const setSuccess = (msg: string): ThunkAction<void, RootState, null, AuthAction> => {\r\n//     return dispatch => {\r\n//       dispatch({\r\n//         type: CONSTANTS.SET_SUCCESS,\r\n//         payload: msg\r\n//       });\r\n//     }\r\n// }","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './style.scss';\r\n\r\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { getLocation, setSize } from '../../../../store/actions/locationAction';\r\nimport LoadingElement from '../../../../features/LoadingElement/LoadingElement';\r\n\r\nconst Location: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { location, size } = useSelector((state: RootState) => state.location);\r\n\r\n    useEffect(() => {\r\n        const handleSizes = () => {\r\n            if (window.innerHeight <= 500 && window.innerWidth <= 940) {\r\n                dispatch(setSize(document.getElementById('location-places')?.offsetHeight));\r\n            } else if (size) {\r\n                dispatch(setSize(undefined));\r\n            }\r\n        }\r\n        dispatch(getLocation(() => console.error('error on get companies')));\r\n        window.addEventListener('resize', handleSizes);\r\n        return () => {\r\n            window.removeEventListener('resize', handleSizes);\r\n        }\r\n    }, [dispatch, size]);\r\n\r\n    const renderLocation = () => {\r\n        if (location) {\r\n            return (\r\n                <div className=\"location-places\" id='location-places'>\r\n                    <h2 className=\"title\">{location.title}</h2>\r\n                    <p className=\"text\" dangerouslySetInnerHTML={{__html: location.text as string}}></p>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"location-places\" id='location-places'>\r\n                    <div className=\"title\"><LoadingElement width='100%' height='49px' rounded={true} /></div>\r\n                    <div className=\"text\"><LoadingElement width='100%' height='100px' rounded={true} /></div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    // change API KEY\r\n    return (\r\n        <section className=\"location\" style={size ? {'height': `calc(40vh + ${size}px)`} : {}}>\r\n            <div className=\"location-map\">\r\n                <LoadScript googleMapsApiKey='AIzaSyCOlCWglACdL8xVijkKzuO5JFlPbpd7Wpw'>\r\n                    <GoogleMap\r\n                        mapContainerStyle={{width: '100%', height: '100%'}}\r\n                        center={{lat: 43.5211591, lng: -0.66302774}}\r\n                        zoom={9}\r\n                    ></GoogleMap>\r\n                </LoadScript>\r\n            </div>\r\n            {renderLocation()}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Location;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './style.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Service as ServiceModel } from '../../../../../store/models/servicesTypes';\r\nimport { Image } from '../../../../../store/models/imagesTypes';\r\nimport { RootState } from '../../../../../store';\r\nimport { getImageFromKey } from '../../../../../store/actions/imagesAction';\r\n\r\nconst Service = (props: {service: ServiceModel, keyId: number}) => {\r\n    const { images } = useSelector((state: RootState) => state.images);\r\n    let serviceImage = {} as Image;\r\n\r\n    if (images) serviceImage = getImageFromKey(props.service?.image as string, images);\r\n\r\n    return (\r\n        <Link to={`/services#${props.keyId}`} className=\"card\" style={{backgroundImage: `url(${serviceImage.full})`}} key={`service-item-${props.keyId}`}>\r\n            <div className=\"card-content\">\r\n                <h3 className='title'>{props.service.name}</h3>\r\n                <p className=\"description\">{props.service.desc}</p>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Service;","import React, { FC } from 'react';\r\nimport {  useSelector } from 'react-redux';\r\nimport './style.scss';\r\n\r\nimport { RootState } from '../../../../store';\r\n\r\nimport Service from './Service/service';\r\n\r\nimport LoadingElement from '../../../../features/LoadingElement/LoadingElement';\r\n\r\nconst Services: FC = () => {\r\n    const { services } = useSelector((state: RootState) => state.services);\r\n\r\n    const servicesMap = services?.items.map((service, index) => {\r\n        return (\r\n            <Service service={service} keyId={index} key={`service-${index}`} />\r\n        );\r\n    });\r\n\r\n    if (services) {\r\n        return (\r\n            <section className='services'>\r\n                <h2 className=\"title\">{services.title}</h2>\r\n                <p className=\"text\">{services.subTitle}</p>\r\n                <div className=\"services-list\">{servicesMap}</div>\r\n            </section>\r\n        );\r\n    } else {\r\n        return (\r\n            <section className='services'>\r\n                <h2 className=\"title\"><LoadingElement width='350px' height='49px' rounded={true} /></h2>\r\n                <div className=\"text\">\r\n                    <LoadingElement width='70%' height='1em' rounded={true} />\r\n                    <LoadingElement width='70%' height='1em' rounded={true} />\r\n                    <LoadingElement width='70%' height='1em' rounded={true} />\r\n                    <LoadingElement width='70%' height='1em' rounded={true} />\r\n                </div>\r\n                <div className=\"services-list\">\r\n                    <LoadingElement width='250px' height='250px' rounded={true} />\r\n                    <LoadingElement width='250px' height='250px' rounded={true} />\r\n                    <LoadingElement width='250px' height='250px' rounded={true} />\r\n                    <LoadingElement width='250px' height='250px' rounded={true} />\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Services;","import React from 'react';\r\nimport './style.scss';\r\n\r\nimport { About, Banner, Companies, Contact, Location, Services} from './hooks';\r\n\r\nclass Home extends React.Component {\r\n    componentDidMount() {\r\n        if (window.location.href.includes('#contact')) {\r\n            document.getElementById('contact')?.scrollIntoView();\r\n        } else if (window.location.href.includes('#about')) {\r\n            document.getElementById('about')?.scrollIntoView();\r\n        } else {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <Banner />\r\n                <Services />\r\n                <About />\r\n                <Companies />\r\n                <div className=\"contact-and-location\" id=\"contact\">\r\n                    <Contact />\r\n                    <Location />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import { ThunkAction } from 'redux-thunk';\r\n\r\nimport * as CONSTANTS from '../models/constants';\r\nimport { ServicesAction, SET_SERVICES, SET_DISPLAY, ServiceDisplay, SET_CURRENT_INDEX, SET_MOBILE, SET_TICKING, Service, Services } from '../models/servicesTypes';\r\n\r\nimport { RootState } from '..';\r\nimport firebase from '../../firebase/config';\r\n\r\nexport const setLoading = (value: boolean): ThunkAction<void, RootState, null, ServicesAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_LOADING,\r\n            payload: value\r\n        });\r\n    }\r\n}\r\n\r\nexport const getServices = (): ThunkAction<void, RootState, null, ServicesAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            firebase.database().ref('services/').on('value', (data: firebase.database.DataSnapshot) => {\r\n                if (data.val()) {\r\n                    dispatch({\r\n                        type: SET_SERVICES,\r\n                        payload: data.val()\r\n                    });\r\n                    dispatch(setLoading(false));\r\n                }\r\n            }, error => {\r\n                dispatch(setError(error.message));\r\n                dispatch(setLoading(false));\r\n            });\r\n        } catch (err) {\r\n            dispatch(setLoading(false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const setServicesInformations = (services: Services, callback: (isSuccess: boolean) => void): ThunkAction<void, RootState, null, ServicesAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            await firebase.database().ref('services/').child('title').set(services.title);\r\n            await firebase.database().ref('services/').child('subTitle').set(services.subTitle);\r\n            dispatch(getServices());\r\n            callback(true);\r\n            dispatch(setLoading(false));\r\n        } catch (err) {\r\n            console.log(err);\r\n            callback(false);\r\n            dispatch(setLoading(false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const setSingleService = (service: Service, index: number, isNew: boolean, callback: (isSuccess: boolean) => void): ThunkAction<void, RootState, null, ServicesAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            if (isNew) {\r\n                await firebase.database().ref('services/items/').push(service);\r\n            } else {\r\n                await firebase.database().ref('services/items/').child(index.toString()).set(service);\r\n            }\r\n            dispatch(getServices());\r\n            callback(true);\r\n            dispatch(setLoading(false));\r\n        } catch (err) {\r\n            console.log(err);\r\n            callback(false);\r\n            dispatch(setLoading(false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteService = (index: number, callback: (isSuccess: boolean) => void): ThunkAction<void, RootState, null, ServicesAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            await firebase.database().ref('services/items/').child(index.toString()).remove();\r\n            dispatch(getServices());\r\n            callback(true);\r\n            dispatch(setLoading(false));\r\n        } catch (err) {\r\n            console.log(err);\r\n            callback(false);\r\n            dispatch(setLoading(false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const setDisplay = (displays: Array<ServiceDisplay> | null): ThunkAction<void, RootState, null, ServicesAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: SET_DISPLAY,\r\n            payload: displays\r\n        });\r\n    }\r\n}\r\n\r\nexport const setCurrentIndex = (index: number): ThunkAction<void, RootState, null, ServicesAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: SET_CURRENT_INDEX,\r\n            payload: index\r\n        });\r\n    }\r\n}\r\n\r\nexport const setMobile = (mobile: boolean): ThunkAction<void, RootState, null, ServicesAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: SET_MOBILE,\r\n            payload: mobile\r\n        });\r\n    }\r\n}\r\n\r\nexport const setTicking = (ticking: boolean): ThunkAction<void, RootState, null, ServicesAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: SET_TICKING,\r\n            payload: ticking\r\n        });\r\n    }\r\n}\r\n\r\nexport const setError = (msg: string): ThunkAction<void, RootState, null, ServicesAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_ERROR,\r\n            payload: msg\r\n        });\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './style.scss';\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nimport { ServiceDisplay } from '../../../store/models/servicesTypes';\r\nimport { RootState } from '../../../store';\r\nimport { Image } from '../../../store/models/imagesTypes';\r\nimport { getImageFromKey } from '../../../store/actions/imagesAction';\r\nimport { setMobile } from '../../../store/actions/servicesAction';\r\n\r\n\r\ninterface ServiceProps {\r\n    service: ServiceDisplay;\r\n    align: string;\r\n    keyId: string;\r\n}\r\n\r\nconst Service = (props: ServiceProps) => {\r\n    const dispatch = useDispatch();\r\n    const { images } = useSelector((state: RootState) => state.images);\r\n    const { mobile } = useSelector((state: RootState) => state.services);\r\n    let serviceImage = {} as Image;\r\n\r\n    if (images) serviceImage = getImageFromKey(props.service?.service.image as string, images);\r\n\r\n    useEffect(() => {\r\n        const handleSizes = () => {\r\n            if (window.innerWidth <= 768) {\r\n                dispatch(setMobile(true));\r\n            } else {\r\n                dispatch(setMobile(false));\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', handleSizes);\r\n        handleSizes();\r\n        return () => {\r\n            window.removeEventListener('resize', handleSizes);\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <section\r\n            className={`service${props.service.isDown ? ' down-scroll' : ''}${props.service.isUp ? ' up-scroll' : ''}${props.align === 'right' ? ' service-right' : ''}${mobile ? ' service-mobile' : ''}`}\r\n            key={props.keyId}\r\n        >\r\n            <div className=\"service-container-image\">\r\n                <LazyLoadImage\r\n                    alt='Amandine Papon - service'\r\n                    placeholderSrc={serviceImage.pixelized}\r\n                    src={serviceImage.full}\r\n                    effect='blur'\r\n                    className='service-image'\r\n                />\r\n            </div>\r\n            <div className=\"service-wrapper\">\r\n                <div className=\"service-container\">\r\n                    <h2 className=\"service-title\">{props.service.service.name}</h2>\r\n                    <div className=\"service-content\" dangerouslySetInnerHTML={{__html: props.service.service.content}}></div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Service;","import React, { useEffect } from 'react';\r\nimport './style.scss';\r\n\r\nimport Service from './Service';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../store';\r\nimport { ServiceDisplay } from '../../store/models/servicesTypes';\r\nimport { setCurrentIndex, setDisplay, setTicking } from '../../store/actions/servicesAction';\r\n\r\nconst Services = () => {\r\n    const dispatch = useDispatch();\r\n    const { services, display, currentIndex, ticking } = useSelector((state: RootState) => state.services);\r\n    let tickingTimeout: NodeJS.Timeout | null = null;\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth > 768 && window.location.href.includes('#') && services) {\r\n            const indexToLocate = parseInt(window.location.hash.replace('#', ''));\r\n            const servicesDisplay = services.items.slice().map((service, index) => {\r\n                const d: ServiceDisplay = {\r\n                    service: service\r\n                }\r\n                if (index < indexToLocate) {\r\n                    d.isDown = true;\r\n                }\r\n                return d;\r\n            });\r\n            dispatch(setDisplay(servicesDisplay));\r\n\r\n        } else if (services) {\r\n            const servicesDisplay = services.items.slice().map((service, index) => {\r\n                return {\r\n                    service: service\r\n                } as ServiceDisplay\r\n            });\r\n            dispatch(setDisplay(servicesDisplay));\r\n            window.scrollTo(0, 0);\r\n        } else {\r\n            window.scrollTo(0, 0);\r\n        }\r\n        return () => {\r\n            if (tickingTimeout) {\r\n                clearInterval(tickingTimeout);\r\n            }\r\n            dispatch(setCurrentIndex(0));\r\n        }\r\n    }, [dispatch, services, tickingTimeout]);\r\n\r\n    const slideDurationTimeout = () => {\r\n        const t = setTimeout(() => {\r\n            dispatch(setTicking(false));\r\n        }, 300);\r\n        tickingTimeout = t;\r\n    }\r\n\r\n    const handleOnWheel = (e: React.WheelEvent<HTMLDivElement>) => {\r\n        if (window.innerWidth > 768 && display) {\r\n            console.log(ticking);\r\n            if (!ticking) {\r\n                if (e.deltaY > 0) {\r\n                    dispatch(setTicking(true));\r\n                    if (currentIndex < display.length - 1) {\r\n                        const services = display.slice();\r\n                        services[currentIndex].isUp = false;\r\n                        services[currentIndex].isDown = true;\r\n                        dispatch(setDisplay(services));\r\n                        dispatch(setCurrentIndex(currentIndex + 1));\r\n                    }\r\n                    slideDurationTimeout();\r\n                } else {\r\n                    dispatch(setTicking(true));\r\n                    if (currentIndex > 0) {\r\n                        const services = display.slice();\r\n                        services[currentIndex - 1].isUp = true;\r\n                        services[currentIndex - 1].isDown = false;\r\n                        dispatch(setDisplay(services));\r\n                        dispatch(setCurrentIndex(currentIndex - 1));\r\n                    }\r\n                    slideDurationTimeout();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleClickDot = (index: number) => {\r\n        dispatch(setDisplay(moveToLocation(index)));\r\n        dispatch(setCurrentIndex(index));\r\n    }\r\n\r\n    const moveToLocation = (indexToLocate: number) => {\r\n        if (display) {\r\n            return display.slice().map((service, index) => {\r\n                if (index < indexToLocate) {\r\n                    service.isDown = true;\r\n                    service.isUp = false;\r\n                } else {\r\n                    service.isDown = false;\r\n                    service.isUp = true;\r\n                }\r\n                return service;\r\n            });\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    const renderDots = () => {\r\n        if (display) {\r\n            return display.slice().map((service, index) => (\r\n                <div\r\n                    className={`services-page-dot${index === currentIndex ? ' services-page-dot-focus' : ''}`}\r\n                    onClick={() => handleClickDot(index)} key={`dot-${index}`}\r\n                />\r\n            ));\r\n        }\r\n    }\r\n\r\n    const renderServices = () => {\r\n        if (display) {\r\n            return display.slice().map((service, index) => (\r\n                <Service\r\n                    service={service}\r\n                    align={index % 2 ? 'right' : 'left'}\r\n                    keyId={`service-${index}`}\r\n                    key={index}\r\n                />\r\n            ));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"services-page\" onWheel={handleOnWheel}>\r\n            {renderServices()}\r\n            <div className=\"services-page-dots\">{renderDots()}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Services;","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface BurgerProps {\r\n    open: boolean;\r\n    setOpen: (open: boolean) => void;\r\n}\r\n\r\nfunction Burger(props: BurgerProps) {\r\n    return (\r\n        <button className={`burger${props.open ? ' burger-open' : ''}`} onClick={() => props.setOpen(!props.open)}>\r\n            <div />\r\n            <div />\r\n            <div />\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Burger;","export default __webpack_public_path__ + \"static/media/logo.0f02afe9.png\";","export default __webpack_public_path__ + \"static/media/logo-pixelized.26bba109.png\";","import React from 'react';\r\nimport './style.scss';\r\n\r\nimport { FaFacebookF, FaLinkedinIn } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\n// import { AuthUserContext } from '../Firebase'\r\n\r\nimport Burger from '../Burger';\r\n\r\nimport logo from '../../assets/images/logo.png';\r\nimport logoPixelized from '../../assets/images/logo-pixelized.png';\r\n\r\ninterface HeaderState {\r\n    limit: boolean;\r\n    fixed: boolean;\r\n    mobile: boolean;\r\n    open: boolean;\r\n}\r\n\r\nclass Header extends React.Component<{isFixed?: boolean}, HeaderState> {\r\n    constructor(props: {isFixed?: boolean} | Readonly<{}>) {\r\n        super(props);\r\n        this.isOverLimit();\r\n        this.state = {\r\n            limit: false,\r\n            fixed: false,\r\n            mobile: false,\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.location.href.includes('/services')) {\r\n            this.setState({fixed: true});\r\n        }\r\n        window.addEventListener('resize', this.handleSizes);\r\n        this.handleSizes();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleSizes);\r\n    }\r\n\r\n    handleSizes = () => {\r\n        if (window.innerWidth <= 768) {\r\n            this.setState({mobile: true});\r\n        } else {\r\n            this.setState({mobile: false});\r\n        }\r\n    }\r\n\r\n    isOverLimit() {\r\n        window.onscroll = () => {\r\n            const limit = this.state.limit;\r\n            let value = null;\r\n            if (window.pageYOffset >= 20) {\r\n                value = true;\r\n            } else if (window.pageYOffset < 20) {\r\n                value = false;\r\n            }\r\n            if (value !== null && value !== limit) {\r\n                this.setState({limit: value});\r\n            }\r\n        }\r\n    }\r\n\r\n    onClickLink(param: string) {\r\n        switch (param) {\r\n            default :\r\n                this.setState({fixed: false});\r\n                document.getElementById(param)?.scrollIntoView();\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleSetOpenMobile = (open: boolean) => {\r\n        this.setState({open: open});\r\n    }\r\n\r\n    renderHamburgerButton() {\r\n        if (this.state.mobile) {\r\n            return (\r\n                <Burger open={this.state.open} setOpen={this.handleSetOpenMobile}/>\r\n            );\r\n        }\r\n        return ;\r\n    }\r\n\r\n    renderMobileIcon() {\r\n        if (this.state.mobile) {\r\n            return (\r\n                <li className='menu-mobile-logo'>\r\n                    <Link to='/' onClick={() => this.onClickLink('/')}>\r\n                        <LazyLoadImage\r\n                            alt='Amandine Papon - logo'\r\n                            placeholderSrc={logoPixelized}\r\n                            src={logo}\r\n                            effect='blur'\r\n                        />\r\n                    </Link>\r\n                </li>\r\n            );\r\n        } else {\r\n            return ;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header\r\n                className={\r\n                    `menu\r\n                    ${this.state.limit || this.state.fixed ? ' menu-fix' : ''}\r\n                    ${this.state.mobile ? ' menu-mobile' : ''}\r\n                    ${this.props.isFixed ? ' menu-fix': ''}\r\n                    `\r\n                }\r\n            >\r\n                {this.renderHamburgerButton()}\r\n                <ul className={`items left${this.state.open ? ' menu-mobile-open' : ''}`} onClick={() => this.handleSetOpenMobile(!this.state.open)}>\r\n                    {this.renderMobileIcon()}\r\n                    <li>\r\n                        <Link to='/services' className='link-white'>Services</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/#about' className='link-white' onClick={() => this.onClickLink('about')}>À propos</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to='/#contact' className='link-white' onClick={() => this.onClickLink('contact')}>Contact</Link>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"social\">\r\n                            <a href=\"https://www.facebook.com/Amandine-Papon-Conseil-en-sant%C3%A9-et-s%C3%A9curit%C3%A9-104483988388037\" target='_blank' rel=\"noreferrer\" className=\"link-white\"><FaFacebookF/></a>\r\n                            <a href=\"https://www.linkedin.com/in/amandine-papon-043087166\" target='_blank' rel=\"noreferrer\" className=\"link-white\"><FaLinkedinIn/></a>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n                <div className='items right'>\r\n                    <Link to='/' onClick={() => this.onClickLink('/')}>\r\n                        <LazyLoadImage\r\n                            alt='Amandine Papon - logo'\r\n                            placeholderSrc={logoPixelized}\r\n                            src={logo}\r\n                            effect='blur'\r\n                        />\r\n                    </Link>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nimport logo from '../../assets/images/logo.png';\r\nimport logoPixelized from '../../assets/images/logo-pixelized.png';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer-logo\">\r\n                <Link to='/'>\r\n                    <LazyLoadImage\r\n                        alt='Amandine Papon - logo'\r\n                        height='70'\r\n                        placeholderSrc={logoPixelized}\r\n                        src={logo}\r\n                        effect='blur'\r\n                    />\r\n                </Link>\r\n            </div>\r\n            <div className=\"footer-bottom\">\r\n                <p className=\"text author\">Site créé par : <a href=\"https://adrienmusserotte.fr\" className=\"link-white\" target='_blank' rel=\"noreferrer\">Adrien Musserotte</a></p>\r\n                <p className=\"text copyright\">Copyright 2021 - Amandine Papon</p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import { ThunkAction } from 'redux-thunk';\r\n\r\nimport * as CONSTANTS from '../models/constants';\r\nimport { AuthAction, SignInData } from '../models/authTypes';\r\n\r\nimport { RootState } from '..';\r\nimport firebase from '../../firebase/config';\r\n\r\nexport const setLoading = (value: boolean): ThunkAction<void, RootState, null, AuthAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_LOADING,\r\n            payload: value\r\n        });\r\n    }\r\n}\r\n\r\nexport const setUser = (): ThunkAction<void, RootState, null, AuthAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_USER,\r\n            payload: { email: '' }\r\n        });\r\n    }\r\n}\r\n\r\nexport const signin = (data: SignInData, onError: () => void): ThunkAction<void, RootState, null, AuthAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            const login = await firebase.auth().signInWithEmailAndPassword(data.email, data.password);\r\n            if (login.user) {\r\n                dispatch({\r\n                    type: CONSTANTS.SET_USER,\r\n                    payload: { email: data.email }\r\n                });\r\n                dispatch(setLoading(false));\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            onError();\r\n            dispatch(setError(err.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkAction<void, RootState, null, AuthAction> => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(setLoading(true));\r\n            await firebase.auth().signOut();\r\n            dispatch({\r\n                type: CONSTANTS.SIGN_OUT\r\n            });\r\n            dispatch(setLoading(false));\r\n        } catch (err) {\r\n            console.log(err);\r\n            dispatch(setLoading(false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const setError = (msg: string): ThunkAction<void, RootState, null, AuthAction> => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CONSTANTS.SET_ERROR,\r\n            payload: msg\r\n        });\r\n    }\r\n}\r\n\r\nexport const setSuccess = (msg: string): ThunkAction<void, RootState, null, AuthAction> => {\r\n    return dispatch => {\r\n      dispatch({\r\n        type: CONSTANTS.SET_SUCCESS,\r\n        payload: msg\r\n      });\r\n    }\r\n}","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './style.scss';\r\n\r\nimport { signin, setError, setLoading } from '../../store/actions/authAction';\r\nimport { RootState } from '../../store';\r\n\r\nimport Form from '../../features/Form';\r\nimport FieldModel from '../../features/Form/Field/model';\r\n\r\nconst Login: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { error } = useSelector((state: RootState) => state.auth);\r\n\r\n    const loginForm = [\r\n        {\r\n            label: 'Email',\r\n            type: 'email',\r\n            placeholder: 'exemple@exemple.fr',\r\n            value: '',\r\n            required: true,\r\n        },\r\n        {\r\n            label: 'Mot de passe',\r\n            type: 'password',\r\n            value: '',\r\n            required: true,\r\n        },\r\n    ] as Array<FieldModel>;\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if(error) {\r\n                dispatch(setError('error on log in'));\r\n            }\r\n        }\r\n    }, [error, dispatch]);\r\n\r\n    const hanleSubmit = (form: Array<FieldModel>) => {\r\n        setLoading(true);\r\n        dispatch(signin({ email: form[0].value, password: form[1].value}, () => { setLoading(false); console.log('error')}));\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <h1 className=\"title\">Se connecter</h1>\r\n            <Form fields={loginForm} getSubmitForm={hanleSubmit} buttonForm='CircleArrow'/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","export const SERVICES = '/services';\r\nexport const LOGIN = '/login';\r\nexport const ADMIN = '/admin';\r\nexport const ADMIN_MEDIA = '/admin/media';\r\nexport const ADMIN_BANNER = '/admin/banner';\r\nexport const ADMIN_SERVICES = '/admin/services';\r\nexport const ADMIN_ABOUT = '/admin/about';\r\nexport const ADMIN_COMPANIES = '/admin/companies';\r\nexport const ADMIN_LOCATION = '/admin/location';\r\nexport const ADMIN_CONTACT = '/admin/contact';\r\nexport const HOME = '/';","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Form from '../../../../features/Form';\r\nimport FieldModel from '../../../../features/Form/Field/model';\r\nimport { RootState } from '../../../../store';\r\nimport { getAbout, setAbout } from '../../../../store/actions/aboutAction';\r\nimport { About } from '../../../../store/models/aboutTypes';\r\n\r\ninterface AboutAdminProps {\r\n    onPopUp?: (msg: string, isSuccess: boolean) => void;\r\n}\r\n\r\nconst AboutAdmin: FC<AboutAdminProps> = (props: AboutAdminProps) => {\r\n    const dispatch = useDispatch();\r\n    const { about } = useSelector((state: RootState) => state.about);\r\n    const { images } = useSelector((state: RootState) => state.images);\r\n\r\n    const aboutForm = [\r\n        {\r\n            label: '',\r\n            type: 'group',\r\n            size: '65',\r\n            value: [\r\n                {\r\n                    label: 'Titre',\r\n                    type: 'text',\r\n                    placeholder: 'Titre',\r\n                    value: about?.title,\r\n                    required: true,\r\n                },\r\n                {\r\n                    label: 'Sous titre',\r\n                    type: 'text',\r\n                    placeholder: 'Sous Titre',\r\n                    value: about?.subTitle,\r\n                    required: true,\r\n                },\r\n                {\r\n                    label: 'Texte',\r\n                    type: 'richtext',\r\n                    placeholder: 'Je suis...',\r\n                    value: about?.text,\r\n                    required: true,\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: 'Photos',\r\n            type: 'group',\r\n            size: '35',\r\n            value: [\r\n                {\r\n                    label: 'Photo de profil',\r\n                    type: 'image',\r\n                    value: about?.profil,\r\n                    required: true,\r\n                    images: images,\r\n                },\r\n                {\r\n                    label: 'Photo de fond',\r\n                    type: 'image',\r\n                    value: about?.background,\r\n                    required: true,\r\n                    images: images,\r\n                },\r\n            ]\r\n        },\r\n    ] as Array<FieldModel>;\r\n\r\n    useEffect(() => {\r\n        dispatch(getAbout());\r\n    }, [dispatch]);\r\n\r\n    const handleIsSuccess = (isSuccess: boolean) => {\r\n        if (props.onPopUp) {\r\n            if (isSuccess) {\r\n                props.onPopUp('Les nouvelles informations ont été enregistrées avec succès', true);\r\n            } else {\r\n                props.onPopUp('Une erreur est survenue, merci de contacter l\\'administrateur', false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (form: Array<FieldModel>) => {\r\n        const about = {\r\n            title: form[0].value[0].value,\r\n            subTitle: form[0].value[1].value,\r\n            text: form[0].value[2].value,\r\n            profil: form[1].value[0].value,\r\n            background: form[1].value[1].value,\r\n        } as About;\r\n        dispatch(setAbout(about, handleIsSuccess));\r\n    }\r\n\r\n    return (\r\n        <section className=\"about-admin\">\r\n            <h1 className=\"title\">À propos</h1>\r\n            {about ? <Form fields={aboutForm} getSubmitForm={handleSubmit} buttonForm='Simple'/> : <div>loading...</div>}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default AboutAdmin;","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Form from '../../../../features/Form';\r\nimport FieldModel from '../../../../features/Form/Field/model';\r\nimport { RootState } from '../../../../store';\r\nimport { getBanner, setBanner } from '../../../../store/actions/bannerAction';\r\nimport { Banner } from '../../../../store/models/bannerTypes';\r\n\r\ninterface BannerAdminProps {\r\n    onPopUp?: (msg: string, isSuccess: boolean) => void;\r\n}\r\n\r\nconst BannerAdmin: FC<BannerAdminProps> = (props: BannerAdminProps) => {\r\n    const dispatch = useDispatch();\r\n    const { banner } = useSelector((state: RootState) => state.banner);\r\n    const { images } = useSelector((state: RootState) => state.images);\r\n\r\n    const bannerForm = [\r\n        {\r\n            label: '',\r\n            type: 'group',\r\n            size: 65,\r\n            value: [\r\n                {\r\n                    label: 'Titre',\r\n                    type: 'text',\r\n                    placeholder: 'Titre',\r\n                    value: banner?.title,\r\n                    required: true,\r\n                },\r\n                {\r\n                    label: 'Sous titre n°1',\r\n                    type: 'text',\r\n                    placeholder: 'Sous Titre',\r\n                    value: banner?.subTitle,\r\n                    required: true,\r\n                },\r\n                {\r\n                    label: 'Sous titre n°2',\r\n                    type: 'text',\r\n                    placeholder: 'Sous Titre',\r\n                    value: banner?.subSubTitle,\r\n                    required: true,\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            label: '',\r\n            type: 'group',\r\n            size: 35,\r\n            value: [\r\n                {\r\n                    label: 'Photo de fond',\r\n                    type: 'image',\r\n                    value: banner?.image,\r\n                    required: true,\r\n                    images: images,\r\n                },\r\n            ]\r\n        }\r\n    ] as Array<FieldModel>;\r\n\r\n    useEffect(() => {\r\n        dispatch(getBanner(() => console.log('error to load banner')));\r\n    }, [dispatch]);\r\n\r\n    const handleIsSuccess = (isSuccess: boolean) => {\r\n        if (props.onPopUp) {\r\n            if (isSuccess) {\r\n                props.onPopUp('Les nouvelles informations ont été enregistrées avec succès', true);\r\n            } else {\r\n                props.onPopUp('Une erreur est survenue, merci de contacter l\\'administrateur', false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (form: Array<FieldModel>) => {\r\n        const banner = {\r\n            title: form[0].value[0].value,\r\n            subTitle: form[0].value[1].value,\r\n            subSubTitle: form[0].value[2].value,\r\n            image: form[1].value[0].value,\r\n        } as Banner;\r\n        dispatch(setBanner(banner, handleIsSuccess));\r\n    }\r\n\r\n    return (\r\n        <section className=\"about-admin\">\r\n            <h1 className=\"title\">Bannière</h1>\r\n            {banner ? <Form fields={bannerForm} getSubmitForm={handleSubmit} buttonForm='Simple'/> : <div>loading...</div>}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default BannerAdmin;","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './style.scss';\r\n\r\nimport Form from '../../../../features/Form';\r\nimport FieldModel, { INPUT, IMAGE } from '../../../../features/Form/Field/model';\r\nimport { RootState } from '../../../../store';\r\nimport { getCompanies, setCompanies } from '../../../../store/actions/companiesAction';\r\nimport { Companies, Company } from '../../../../store/models/companiesTypes';\r\n\r\n// import FabButton from '../../../../features/FabButton/fabButton';\r\n\r\ninterface CompaniesAdminProps {\r\n    onPopUp?: (msg: string, isSuccess: boolean) => void;\r\n}\r\n\r\nconst CompaniesAdmin: FC<CompaniesAdminProps> = (props: CompaniesAdminProps) => {\r\n    const dispatch = useDispatch();\r\n    const { companies } = useSelector((state: RootState) => state.companies);\r\n    const { images } = useSelector((state: RootState) => state.images);\r\n\r\n    const companiesForm = [\r\n        {\r\n            label: 'Titre',\r\n            type: 'text',\r\n            placeholder: 'Titre',\r\n            value: companies?.title,\r\n            required: true,\r\n        },\r\n        {\r\n            label: '',\r\n            type: 'list',\r\n            value: undefined,\r\n            required: true,\r\n            images: images,\r\n            model: [\r\n                {\r\n                    type: INPUT,\r\n                    label: 'Nom',\r\n                    size: 30,\r\n                },\r\n                {\r\n                    type: INPUT,\r\n                    label: 'Lien',\r\n                    size: 30,\r\n                },\r\n                {\r\n                    type: IMAGE,\r\n                    label: 'Image',\r\n                    size: 30,\r\n                },\r\n            ]\r\n        },\r\n    ] as Array<FieldModel>;\r\n\r\n    useEffect(() => {\r\n        dispatch(getCompanies(() => console.log('error on load location')));\r\n    }, [dispatch]);\r\n\r\n    function initList(items: Array<Company>) {\r\n        return items.slice().map(item => {\r\n            return [item.name, item.link, item.image];\r\n        });\r\n    }\r\n\r\n    const handleIsSuccess = (isSuccess: boolean) => {\r\n        if (props.onPopUp) {\r\n            if (isSuccess) {\r\n                props.onPopUp('Les nouvelles informations ont été enregistrées avec succès', true);\r\n            } else {\r\n                props.onPopUp('Une erreur est survenue, merci de contacter l\\'administrateur', false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (form: Array<FieldModel>) => {\r\n        const companies = {\r\n            title: form[0].value,\r\n        } as Companies;\r\n        const items = (form[1].value as Array<any[]>).slice().map(item => {\r\n            return {\r\n                name: item[0],\r\n                link: item[1],\r\n                image: item[2]\r\n            };\r\n        });\r\n        companies.items = items;\r\n        dispatch(setCompanies(companies, handleIsSuccess));\r\n    }\r\n\r\n    const renderForm = () => {\r\n        if (companies && companies.items) {\r\n            companiesForm[1].value = initList(companies.items);\r\n        }\r\n        return <>{companies ? <Form fields={companiesForm} getSubmitForm={handleSubmit} buttonForm='Simple'/> : <div>loading...</div>}</>\r\n    }\r\n\r\n    return (\r\n        <section className=\"companies-admin\">\r\n            <h1 className=\"title\">Entreprises</h1>\r\n            {renderForm()}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default CompaniesAdmin;","import React from 'react';\r\n\r\nconst ContactAdmin = () => {\r\n    return <div>contact admin</div>\r\n}\r\n\r\nexport default ContactAdmin;","import React, { FC } from 'react';\r\n\r\nconst HomeAdmin: FC = () => {\r\n\r\n    return (\r\n        <div className=\"admin-home\">\r\n            Home\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeAdmin;","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Form from '../../../../features/Form';\r\nimport FieldModel from '../../../../features/Form/Field/model';\r\nimport { RootState } from '../../../../store';\r\nimport { getLocation, setLocation } from '../../../../store/actions/locationAction';\r\nimport { Location } from '../../../../store/models/locationTypes';\r\n\r\ninterface LocationAdminProps {\r\n    onPopUp?: (msg: string, isSuccess: boolean) => void;\r\n}\r\n\r\nconst LocationAdmin: FC<LocationAdminProps> = (props: LocationAdminProps) => {\r\n    const dispatch = useDispatch();\r\n    const { location } = useSelector((state: RootState) => state.location);\r\n\r\n    const locationForm = [\r\n        {\r\n            label: 'Titre',\r\n            type: 'text',\r\n            placeholder: 'Titre',\r\n            value: location?.title,\r\n            required: true,\r\n        },\r\n        {\r\n            label: 'Texte',\r\n            type: 'richtext',\r\n            placeholder: 'Je suis...',\r\n            value: location?.text,\r\n            required: true,\r\n        },\r\n    ] as Array<FieldModel>;\r\n\r\n    useEffect(() => {\r\n        dispatch(getLocation(() => console.log('error on load location')));\r\n    }, [dispatch]);\r\n\r\n    const handleIsSuccess = (isSuccess: boolean) => {\r\n        if (props.onPopUp) {\r\n            if (isSuccess) {\r\n                props.onPopUp('Les nouvelles informations ont été enregistrées avec succès', true);\r\n            } else {\r\n                props.onPopUp('Une erreur est survenue, merci de contacter l\\'administrateur', false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (form: Array<FieldModel>) => {\r\n        const location = {\r\n            title: form[0].value,\r\n            text: form[1].value,\r\n        } as Location;\r\n        dispatch(setLocation(location, handleIsSuccess));\r\n    }\r\n\r\n    return (\r\n        <section className=\"about-admin\">\r\n            <h1 className=\"title\">Localisation</h1>\r\n            {location ? <Form fields={locationForm} getSubmitForm={handleSubmit} buttonForm='Simple'/> : <div>loading...</div>}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default LocationAdmin;","import React, { FC } from 'react';\r\nimport './style.scss';\r\n\r\nimport SelectImages from '../../components/SelectImages/selectImages';\r\n\r\nconst MediaAdmin: FC = () => {\r\n    return (\r\n        <section className=\"media\">\r\n            <h1 className=\"title\">Media</h1>\r\n            <SelectImages onClose={() => {}} onValid={() => {}} onPage={true}/>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default MediaAdmin;","import React, { FC, useState } from 'react';\r\nimport './style.scss';\r\n\r\nimport { Service } from '../../../../../../store/models/servicesTypes';\r\nimport { Image } from '../../../../../../store/models/imagesTypes';\r\nimport FieldModel from '../../../../../../features/Form/Field/model';\r\nimport Form from '../../../../../../features/Form';\r\n\r\ninterface ServiceAdminProps {\r\n    service: Service;\r\n    images: Array<Image> | null;\r\n    keyID: number;\r\n    isShow: boolean;\r\n    onSubmitForm: (form: Array<FieldModel>, index: number) => void;\r\n    onDelete: (index: number) => void;\r\n}\r\n\r\nconst ServiceAdmin: FC<ServiceAdminProps> = (props: ServiceAdminProps) => {\r\n    const [formService] = useState([\r\n        {\r\n            label: '',\r\n            type: 'group',\r\n            size: 70,\r\n            value: [\r\n                {\r\n                    label: 'Nom',\r\n                    type: 'text',\r\n                    placeholder: 'Nom',\r\n                    value: props.service.name,\r\n                    required: true,\r\n                },\r\n                {\r\n                    label: 'Description',\r\n                    type: 'textarea',\r\n                    placeholder: 'Ce service...',\r\n                    value: props.service.desc,\r\n                    required: true,\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            label: 'Image du service',\r\n            type: 'image',\r\n            required: true,\r\n            value: props.service.image,\r\n            images: props.images,\r\n            size: 30,\r\n        },\r\n        {\r\n            label: '',\r\n            type: 'richtext',\r\n            required: true,\r\n            placeholder: 'Ce service...',\r\n            value: props.service.content\r\n        }\r\n    ] as Array<FieldModel>);\r\n\r\n    const handleSubmitForm = (form: Array<FieldModel>) => {\r\n        props.onSubmitForm(form, props.keyID);\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        props.onDelete(props.keyID);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {props.isShow ? <div className='service-admin'>\r\n                <Form fields={formService} getSubmitForm={handleSubmitForm} key={props.keyID} onDelete={handleDelete}/>\r\n            </div> : <></>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ServiceAdmin;","import React, { FC, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './style.scss';\r\n\r\nimport Form from '../../../../features/Form';\r\nimport FieldModel from '../../../../features/Form/Field/model';\r\nimport { RootState } from '../../../../store';\r\nimport { deleteService, getServices, setServicesInformations, setSingleService } from '../../../../store/actions/servicesAction';\r\nimport { Service, Services } from '../../../../store/models/servicesTypes';\r\nimport FabButton from '../../../../features/FabButton/fabButton';\r\nimport ServiceAdmin from './components/Service/service';\r\n\r\ninterface ServicesAdminProps {\r\n    onPopUp?: (msg: string, isSuccess: boolean) => void;\r\n}\r\n\r\nconst ServicesAdmin: FC<ServicesAdminProps> = (props: ServicesAdminProps) => {\r\n    const dispatch = useDispatch();\r\n    const { services } = useSelector((state: RootState) => state.services);\r\n    const { images } = useSelector((state: RootState) => state.images);\r\n    const [servicesState, setServicesState] = useState(null as Services | null);\r\n    const [indexToShow, setIndexToShow] = useState(0);\r\n\r\n    useEffect(() => {\r\n        dispatch(getServices());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (services) { setServicesState(JSON.parse(JSON.stringify(services))); }\r\n    }, [services]);\r\n\r\n    const servicesInformationsForm = [\r\n        {\r\n            label: 'Informations',\r\n            type: 'group',\r\n            value: [\r\n                {\r\n                    label: 'Titre',\r\n                    placeholder: 'Titre',\r\n                    type: 'text',\r\n                    value: services?.title\r\n                },\r\n                {\r\n                    label: 'Texte',\r\n                    placeholder: 'Mes services...',\r\n                    type: 'richtext',\r\n                    value: services?.subTitle\r\n                }\r\n            ],\r\n        },\r\n    ] as Array<FieldModel>;\r\n\r\n    const renderButtons = () => {\r\n        if (servicesState) {\r\n            return servicesState.items.slice().map((service, index) => {\r\n                return <button className={`services-admin-panels-button${indexToShow === index ? ' selected' : ''}`} onClick={e => handleChangeView(e, index)} key={index}>\r\n                    {service.name ? service.name : 'Nouveau service'}\r\n                </button>;\r\n            });\r\n        }\r\n        return <></>\r\n    }\r\n\r\n    const renderForms = (s: Services | null) => {\r\n        if (s) {\r\n            return s.items.slice().map((service, index) =>\r\n                <ServiceAdmin\r\n                    service={service}\r\n                    key={index}\r\n                    keyID={index}\r\n                    images={images}\r\n                    isShow={indexToShow === index}\r\n                    onSubmitForm={handleSubmitForm}\r\n                    onDelete={handleDelete}\r\n                />);\r\n        }\r\n        return <></>;\r\n    }\r\n\r\n    const handleAddService = () => {\r\n        if (servicesState) {\r\n            const n_services = {...servicesState};\r\n            n_services.items.push({\r\n                name: '',\r\n                desc: '',\r\n                image: '',\r\n                content: '',\r\n            } as Service);\r\n            setServicesState(n_services);\r\n            setIndexToShow(n_services.items.length - 1);\r\n        }\r\n    }\r\n\r\n    const handleChangeView = (e: React.MouseEvent, index: number) => {\r\n        e.preventDefault();\r\n        setIndexToShow(index);\r\n    }\r\n\r\n    const handleIsSuccess = (isSuccess: boolean) => {\r\n        if (props.onPopUp) {\r\n            if (isSuccess) {\r\n                props.onPopUp('Les nouvelles informations ont été enregistrées avec succès', true);\r\n            } else {\r\n                props.onPopUp('Une erreur est survenue, merci de contacter l\\'administrateur', false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSubmitForm = (form: Array<FieldModel>, index: number) => {\r\n        if (servicesState) {\r\n            const m_services = {...servicesState};\r\n            let isNew = false;\r\n\r\n            if (m_services.items.length === index) {\r\n                m_services.items.push({} as Service);\r\n                isNew = true;\r\n            } else if (m_services.items.length < index) {\r\n                if (props.onPopUp) props.onPopUp('Veuillez sauvegarder les services avant celui-ci pour pouvoir continuer', false);\r\n                return ;\r\n            }\r\n\r\n            m_services.items[index].name = (form[0].value as Array<FieldModel>)[0].value;\r\n            m_services.items[index].desc = (form[0].value as Array<FieldModel>)[1].value;\r\n            m_services.items[index].image = form[1].value;\r\n            m_services.items[index].content = form[2].value;\r\n\r\n            setServicesState(m_services);\r\n            dispatch(setSingleService(m_services.items[index], index, isNew, handleIsSuccess));\r\n        }\r\n    }\r\n\r\n    const handleDelete = (index: number) => {\r\n        if (services && servicesState) {\r\n            const m_services = {...services};\r\n\r\n            if (m_services.items.length <= index) {\r\n                servicesState.items.splice(index, 1);\r\n            } else {\r\n                setServicesState(m_services);\r\n                dispatch(deleteService(index, handleIsSuccess));\r\n\r\n            }\r\n            setIndexToShow(0);\r\n        }\r\n    }\r\n\r\n    const handleSubmitData = (form: Array<FieldModel>) => {\r\n        const n_services = {\r\n            title: form[0].value[0].value,\r\n            subTitle: form[0].value[1].value,\r\n            items: services?.items,\r\n        } as Services;\r\n        dispatch(setServicesInformations(n_services, handleIsSuccess));\r\n    }\r\n\r\n    return (\r\n        <section className=\"services-admin\">\r\n            <h1 className=\"title\">Services</h1>\r\n            <div className=\"services-admin-informations\">\r\n                <Form fields={servicesInformationsForm} getSubmitForm={handleSubmitData} />\r\n            </div>\r\n            <div className=\"services-admin-panels\">\r\n                <div className=\"services-admin-panels-buttons\">\r\n                    {renderButtons()}\r\n                </div>\r\n                <div className=\"services-admin-panels-panel\">\r\n                    {servicesState ? renderForms(servicesState) : renderForms(services)}\r\n                </div>\r\n            </div>\r\n            <FabButton onClick={handleAddService} />\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ServicesAdmin;","export default __webpack_public_path__ + \"static/media/logo_single.b4542bd2.png\";","import React, { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.scss';\r\n\r\nimport {\r\n    FaTachometerAlt, FaSignOutAlt, FaPhotoVideo,\r\n    FaUser, FaEnvelope, FaMapMarkerAlt, FaTh,\r\n    FaBuilding, FaFlag, FaChevronCircleRight,\r\n    FaChevronCircleLeft\r\n} from 'react-icons/fa';\r\n\r\nimport * as ROUTES from '../../../constants/routes';\r\n\r\nimport { logout } from '../../../../store/actions/authAction';\r\n\r\nimport logo from '../../../../assets/images/logo.png';\r\nimport logoSingle from '../../../../assets/images/logo_single.png';\r\nimport { useDispatch } from 'react-redux';\r\n\r\ninterface HeaderProps {\r\n    isClose: boolean;\r\n    onClick: () => void;\r\n}\r\n\r\nconst HeaderAdmin: FC<HeaderProps> = (props: HeaderProps) => {\r\n    const dispatch = useDispatch();\r\n    \r\n    return (\r\n        <div className={`header${props.isClose ? ' close' : ''}`}>\r\n            <div className=\"header-head\">\r\n                <Link to={ROUTES.HOME}>\r\n                    <img src={props.isClose ? logoSingle : logo} alt=\"logo\" className=\"header-head-logo\"/>\r\n                </Link>\r\n            </div>\r\n            <ul className='header-content'>\r\n                <li className='header-content-item'>\r\n                    <Link to={ROUTES.ADMIN} className='link-white header-content-link'>\r\n                        <FaTachometerAlt />\r\n                        <span>Tableau de bord</span>\r\n                    </Link>\r\n                </li>\r\n                <li className='header-content-item'>\r\n                    <Link to={ROUTES.ADMIN_MEDIA} className='link-white header-content-link'>\r\n                        <FaPhotoVideo />\r\n                        <span>Médias</span>\r\n                    </Link>\r\n                </li>\r\n                <li className='header-content-item'>\r\n                    <Link to={ROUTES.ADMIN_ABOUT} className='link-white header-content-link'>\r\n                        <FaUser />\r\n                        <span>À propos</span>\r\n                    </Link>\r\n                </li>\r\n                <li className='header-content-item'>\r\n                    <Link to={ROUTES.ADMIN_BANNER} className='link-white header-content-link'>\r\n                        <FaFlag />\r\n                        <span>Bannière</span>\r\n                    </Link>\r\n                </li>\r\n                <li className='header-content-item'>\r\n                    <Link to={ROUTES.ADMIN_COMPANIES} className='link-white header-content-link'>\r\n                        <FaBuilding />\r\n                        <span>Entreprises</span>\r\n                    </Link>\r\n                </li>\r\n                <li className='header-content-item'>\r\n                    <Link to={ROUTES.ADMIN_LOCATION} className='link-white header-content-link'>\r\n                        <FaMapMarkerAlt />\r\n                        <span>Localisation</span>\r\n                    </Link>\r\n                </li>\r\n                <li className='header-content-item'>\r\n                    <Link to={ROUTES.ADMIN_SERVICES} className='link-white header-content-link'>\r\n                        <FaTh />\r\n                        <span>Services</span>\r\n                    </Link>\r\n                </li>\r\n                <li className='header-content-item'>\r\n                    <Link to={ROUTES.ADMIN_CONTACT} className='link-white header-content-link'>\r\n                        <FaEnvelope />\r\n                        <span>Contact</span>\r\n                    </Link>\r\n                </li>\r\n                <li className='header-content-item'>\r\n                    <button className=\"link link-white header-content-link\" onClick={() => dispatch(logout())}>\r\n                        <FaSignOutAlt />\r\n                        <span>Déconnexion</span>\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n            <div className=\"header-footer\">\r\n                <button className=\"link link-white\" onClick={props.onClick}>\r\n                    {props.isClose ? <FaChevronCircleRight /> : <FaChevronCircleLeft />}\r\n                    <span>Réduire le menu</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderAdmin;","import React, { useEffect, useRef, useState } from 'react';\r\nimport './style.scss';\r\n\r\nconst VISIBLE = 1;\r\nconst HIDDEN = 2;\r\nconst ENTERING = 3;\r\nconst LEAVING = 4;\r\n\r\nexport const FADE = 'FADE';\r\nexport const SLIDE = 'SLIDE';\r\n\r\nconst Animation = (props: {visible: boolean, children: React.ReactNode, duration: number, type: string}) => {\r\n    const childRef = useRef(props.children);\r\n    const [state, setState] = useState(props.visible ? VISIBLE : HIDDEN);\r\n    let className = state === VISIBLE ? 'animation' : 'animation out';\r\n\r\n    switch (props.type) {\r\n        case SLIDE:\r\n            className += ' slide';\r\n            break;\r\n        default:\r\n            className += ' fade';\r\n    }\r\n\r\n    if (props.visible) {\r\n        childRef.current = props.children;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!props.visible) {\r\n            setState(LEAVING);\r\n        } else {\r\n            setState((s) => s === HIDDEN ? ENTERING : VISIBLE);\r\n        }\r\n    }, [props.visible]);\r\n\r\n    useEffect(() => {\r\n        if (state === LEAVING) {\r\n            const timer = setTimeout(() => {\r\n                setState(HIDDEN);\r\n            }, props.duration);\r\n            return (() => {\r\n                clearTimeout(timer);\r\n            });\r\n        } else if (state === ENTERING) {\r\n            console.log(document.body.offsetHeight);\r\n            setState(VISIBLE);\r\n        }\r\n    }, [props.duration, state]);\r\n\r\n    if (state === HIDDEN) {\r\n        return <></>;\r\n    }\r\n\r\n    return <div className={className}>{childRef.current}</div>\r\n}\r\n\r\nexport default Animation;","import React, { useEffect } from 'react';\r\nimport './style.scss';\r\n\r\nimport { FaTimes, FaCheck } from 'react-icons/fa';\r\n\r\nimport Animation, { SLIDE } from '../Animation/animation';\r\n\r\nconst PopUpMessage = (props: {msg: string, isSuccess: boolean, visible: boolean, duration: number, endAnimation: () => void}) => {\r\n    \r\n    useEffect(() => {\r\n        if (props.visible) {\r\n            const timer = setTimeout(() => props.endAnimation(), props.duration);\r\n            return (() => {\r\n                clearInterval(timer);\r\n            });\r\n        }\r\n    }, [props])\r\n\r\n    return (\r\n        <Animation visible={props.visible} duration={props.duration} type={SLIDE}>\r\n        <div className='popup'>\r\n            {props.isSuccess ? <FaCheck className='popup-icon green' /> : <FaTimes  className='popup-icon red' />}\r\n            <p className=\"popup-text\">{props.msg}</p>\r\n        </div>\r\n        </Animation>\r\n    );\r\n}\r\n\r\nexport default PopUpMessage;","import React, { FC, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './style.scss';\r\n\r\nimport {\r\n    Route,\r\n    Switch\r\n} from 'react-router-dom';\r\n\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nimport {\r\n    AboutAdmin,\r\n    BannerAdmin,\r\n    CompaniesAdmin,\r\n    ContactAdmin,\r\n    HomeAdmin,\r\n    LocationAdmin,\r\n    MediaAdmin,\r\n    ServicesAdmin\r\n} from './pages';\r\n\r\nimport HeaderAdmin from './components/Header/header';\r\n// import { getAbout } from '../../store/actions/aboutAction';\r\nimport { getImages } from '../../store/actions/imagesAction';\r\n\r\nimport PopUpMessage from '../../features/PopUpMessage/popUpMessage';\r\n// import { getBanner } from '../../store/actions/bannerAction';\r\n// import { getLocation } from '../../store/actions/locationAction';\r\n\r\nconst popupDataInitializer = {\r\n    msg: '',\r\n    isSuccess: false,\r\n};\r\n\r\nconst Admin: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const [isClose, setIsClose] = useState(false);\r\n    const [popupVisible, setPopupVisible] = useState(false);\r\n    const [popupDatas, setPopupDatas] = useState(popupDataInitializer);\r\n\r\n    useEffect(() => {\r\n        dispatch(getImages(() => console.log('error on load images')));\r\n    }, [dispatch]);\r\n\r\n    const handlePopUp = (msg: string, isSuccess: boolean) => {\r\n        setPopupDatas({\r\n            msg: msg,\r\n            isSuccess: isSuccess,\r\n        });\r\n        setPopupVisible(true);\r\n    }\r\n\r\n    return (\r\n        <div className={`admin${isClose ? ' close' : ''}`}>\r\n            <header className='admin-header'>\r\n                <HeaderAdmin isClose={isClose} onClick={() => setIsClose(!isClose)}/>\r\n            </header>\r\n            <div className=\"admin-container\">\r\n                <Switch>\r\n                    <Route exact path={ROUTES.ADMIN_MEDIA} component={MediaAdmin} />\r\n                    <Route exact path={ROUTES.ADMIN_ABOUT} render={() => <AboutAdmin onPopUp={handlePopUp} />} />\r\n                    <Route exact path={ROUTES.ADMIN_BANNER} render={() => <BannerAdmin onPopUp={handlePopUp} />} />\r\n                    <Route exact path={ROUTES.ADMIN_COMPANIES} render={() => <CompaniesAdmin onPopUp={handlePopUp} />} />\r\n                    <Route exact path={ROUTES.ADMIN_CONTACT} component={ContactAdmin} />\r\n                    <Route exact path={ROUTES.ADMIN_LOCATION} render={() => <LocationAdmin onPopUp={handlePopUp} />} />\r\n                    <Route exact path={ROUTES.ADMIN_SERVICES} render={() => <ServicesAdmin onPopUp={handlePopUp} />} />\r\n                    <Route exact path={ROUTES.ADMIN} component={HomeAdmin} />\r\n                </Switch>\r\n            </div>\r\n            <PopUpMessage\r\n                msg={popupDatas.msg}\r\n                isSuccess={popupDatas.isSuccess}\r\n                visible={popupVisible}\r\n                duration={3000}\r\n                endAnimation={() => setPopupVisible(false)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Admin;","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\n\r\nimport firebase from '../../../../firebase/config';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { setLoading } from '../../../../store/actions/aboutAction';\r\nimport { setUser } from '../../../../store/actions/authAction';\r\nimport * as ROUTES from '../../../constants/routes';\r\n\r\ninterface Props extends RouteProps {\r\n    component: any;\r\n}\r\n\r\nconst PrivateRoute: FC<Props> = ({ component: Component, ...rest }) => {\r\n    const dispatch = useDispatch();\r\n    const { authenticated } = useSelector((state: RootState) => state.auth);\r\n    \r\n    useEffect(() => {\r\n        dispatch(setLoading(true));\r\n        const unsubscribe = firebase.auth().onAuthStateChanged(async (user) => {\r\n        if (!authenticated && user) {\r\n            dispatch(setUser());\r\n        }\r\n        dispatch(setLoading(false));\r\n        });\r\n\r\n        return () => {\r\n        unsubscribe();\r\n        };\r\n  }, [authenticated, dispatch]);\r\n\r\n    return (\r\n        <Route {...rest} render={props => authenticated ? <Component {...props} /> : <Redirect to={ROUTES.LOGIN} />} />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\n\r\nimport firebase from '../../../../firebase/config';\r\n\r\nimport { RootState } from '../../../../store';\r\nimport { setLoading } from '../../../../store/actions/aboutAction';\r\nimport { setUser } from '../../../../store/actions/authAction';\r\nimport * as ROUTES from '../../../constants/routes';\r\n\r\ninterface Props extends RouteProps {\r\n  component: any;\r\n}\r\n\r\nconst PublicRoute: FC<Props> = ({ component: Component, ...rest }) => {\r\n  const dispatch = useDispatch();\r\n  const { authenticated } = useSelector((state: RootState) => state.auth);\r\n  \r\n  useEffect(() => {\r\n      dispatch(setLoading(true));\r\n      const unsubscribe = firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (!authenticated && user) {\r\n          dispatch(setUser());\r\n      }\r\n      dispatch(setLoading(false));\r\n      });\r\n\r\n      return () => {\r\n      unsubscribe();\r\n      };\r\n  }, [authenticated, dispatch]);\r\n\r\n  return(\r\n    <Route {...rest} render={props => !authenticated ? <Component {...props} /> : <Redirect to={ROUTES.ADMIN} />} />\r\n  );\r\n}\r\n\r\nexport default PublicRoute;","import React, { FC, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './style.scss';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\n// import firebase from '../../firebase/config';\r\n\r\nimport Home from '../Home/home';\r\nimport Services from '../Services';\r\nimport Header from '../../features/Header';\r\nimport Footer from '../../features/Footer';\r\nimport Login from '../Login';\r\nimport Admin from '../Admin/admin';\r\n\r\nimport PrivateRoute from './hooks/auth/PrivateRoute';\r\nimport PublicRoute from './hooks/auth/PublicRoute';\r\n\r\nimport * as ROUTES from '../constants/routes';\r\n\r\n// import { setLoading, setUser } from '../../store/actions/authAction';\r\nimport { getImages } from '../../store/actions/imagesAction';\r\nimport { getServices } from '../../store/actions/servicesAction';\r\n// import { RootState } from '../../store';\r\n\r\nconst App: FC = () => {\r\n  const dispatch = useDispatch();\r\n  // const { authenticated, loading } = useSelector((state: RootState) => state.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(getImages(() => console.log('error on load images')));\r\n    dispatch(getServices());\r\n  }, [dispatch]);\r\n\r\n  // if(loading) {\r\n  // }\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n\r\n        <PrivateRoute exact path={`${ROUTES.ADMIN}/:path?`} component={Admin} />\r\n\r\n        <Route path={ROUTES.HOME} exact>\r\n          <Header />\r\n          <Route exact path={ROUTES.HOME} component={Home} />\r\n          <Footer />\r\n        </Route>\r\n\r\n        <Route>\r\n          <Header isFixed={true} />\r\n          <Route exact path={ROUTES.SERVICES} component={Services} />\r\n          <PublicRoute exact path={ROUTES.LOGIN} component={Login} />\r\n        </Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './app/App/app';\r\nimport store from './store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}